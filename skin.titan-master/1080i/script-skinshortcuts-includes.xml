<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$ADDON[script.skinshortcuts 32022]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">livetv</property>
			<property name="defaultID">livetv</property>
			<property name="widget">plugin://script.skin.helper.widgets/?action=pvrlisting</property>
			<property name="widgetName">Timers</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=timers&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.PvrBackground)]</property>
			<property name="backgroundName">571</property>
			<property name="widget.1">plugin://script.skin.helper.widgets/?action=pvrlisting</property>
			<property name="widgetName.1">Recent recordings</property>
			<property name="widgetType.1">pvr</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">livetv</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>Movies HUB</label>
			<label2 />
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">movieshub</property>
			<property name="defaultID">movieshub</property>
			<property name="translatedPath">ActivateWindow(3018,return)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(3018,return)</onclick>
			<property name="path">ActivateWindow(3018,return)</property>
			<property name="list">3018</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movieshub</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[589]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</thumb>
			<property name="labelID">589</property>
			<property name="defaultID">589</property>
			<property name="translatedPath">PlayerControl(Partymode(music))</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">PlayerControl(Partymode(music))</onclick>
			<property name="path">PlayerControl(Partymode(music))</property>
			<property name="list">PlayerControl(Partymode(music))</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-589</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[342]</label>
			<label2>Movies</label2>
			<icon>resource://resource.images.skinicons.titan/titan.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<property name="widget">recommendedmovies</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32029]</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="backgroundName">None</property>
			<property name="widget.1">recentmovies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">$LOCALIZE[20386]</property>
			<property name="widget.99">randommovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="squaresubmenu">enable</property>
			<property name="widget.2">plugin://script.skin.helper.widgets/?action=movieslisting</property>
			<property name="widgetName.2">In-progress movies</property>
			<property name="widgetType.2">movies</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="background.name">None</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>TV shows</label2>
			<icon>resource://resource.images.skinicons.titan/titan.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</thumb>
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="widget">nextepisodes</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32002]</property>
			<property name="widgetType">episodes</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32043]</property>
			<property name="widget.1">recentepisodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">$LOCALIZE[20387]</property>
			<property name="widget.99">randomtvshows</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">tvshows</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="widget.2">plugin://script.skin.helper.widgets/?action=episodeslisting</property>
			<property name="widgetName.2">Unaired episodes</property>
			<property name="widgetType.2">episodes</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">plugin://script.skin.helper.widgets/?action=unaired&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widget.3">plugin://script.skin.helper.widgets/?action=episodeslisting</property>
			<property name="widgetName.3">Next airing episodes</property>
			<property name="widgetType.3">episodes</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widget.4">plugin://script.skin.helper.widgets/?action=episodeslisting</property>
			<property name="widgetName.4">Episodes airing today</property>
			<property name="widgetType.4">episodes</property>
			<property name="widgetTarget.4">videos</property>
			<property name="widgetPath.4">plugin://script.skin.helper.widgets/?action=airingtoday&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="multiwidget">multi</property>
			<property name="multiwidget.name">Multiple widgets</property>
			<property name="multiwidgetName">Multiple widgets</property>
			<property name="widget.5">plugin://script.skin.helper.widgets/?action=tvshowslisting</property>
			<property name="widgetName.5">IMDB Top 250 Tv shows in library</property>
			<property name="widgetType.5">tvshows</property>
			<property name="widgetTarget.5">videos</property>
			<property name="widgetPath.5">plugin://script.skin.helper.widgets/?action=top250&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widget.6">plugin://script.skin.helper.widgets/?action=tvshowslisting</property>
			<property name="widgetName.6">Recommended Tv Shows</property>
			<property name="widgetType.6">tvshows</property>
			<property name="widgetTarget.6">videos</property>
			<property name="widgetPath.6">plugin://script.skin.helper.widgets/?action=recommended&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widget.7">plugin://script.skin.helper.widgets/?action=tvshowslisting</property>
			<property name="widgetName.7">Random Tv Shows</property>
			<property name="widgetType.7">tvshows</property>
			<property name="widgetTarget.7">videos</property>
			<property name="widgetPath.7">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[10005]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<property name="widget">recentalbums</property>
			<property name="widgetName">$LOCALIZE[359]</property>
			<property name="widgetType">albums</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</property>
			<property name="widgetTarget">music</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32048]</property>
			<property name="widget.1">recentsongs</property>
			<property name="widgetTarget.1">music</property>
			<property name="widgetType.1">songs</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</property>
			<property name="widgetName.1">$ADDON[script.skin.helper.widgets 32012]</property>
			<property name="widgetstyle">square</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">music</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>resource://resource.images.skinbackgrounds.titan/hover_my music.jpg</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</thumb>
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<property name="widget">recentmusicvideos</property>
			<property name="widgetName">$LOCALIZE[20390]</property>
			<property name="widgetType">musicvideos</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32047]</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">musicvideos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Weather</label2>
			<icon>resource://resource.images.skinicons.titan/weather.png</icon>
			<thumb>$VAR[WeatherFanArtSingleImage_Current]</thumb>
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<property name="widget">weather</property>
			<property name="widgetName">$LOCALIZE[8]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanArtExtension]</property>
			<visible>!IsEmpty(Weather.Plugin)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>$LOCALIZE[31062]</label>
			<label2>youtube</label2>
			<icon>resource://resource.images.skinicons.titan/youtube.png</icon>
			<thumb />
			<property name="labelID">plugin.video.youtube</property>
			<property name="defaultID">plugin.video.youtube</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/hover_extensions.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,plugin://plugin.video.youtube,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://plugin.video.youtube,return)</property>
			<property name="list">plugin://plugin.video.youtube</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-video-youtube</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[10002]</label>
			<label2>Pictures</label2>
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.PicturesBackground)]</thumb>
			<property name="labelID">pictures</property>
			<property name="defaultID">pictures</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.PicturesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32046]</property>
			<visible>!Skin.HasSetting(HomeMenuUsePlexforPictures)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(pictures,return)</onclick>
			<property name="path">ActivateWindow(pictures,return)</property>
			<property name="list">pictures</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">pictures</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>$LOCALIZE[10040]</label>
			<label2>Add-on browser</label2>
			<icon>resource://resource.images.skinicons.titan/addons.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/programs.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10040</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>$LOCALIZE[10006]</label>
			<label2>Videos</label2>
			<icon>resource://resource.images.skinicons.titan/videos.png</icon>
			<thumb />
			<property name="labelID">videos</property>
			<property name="defaultID">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32038]</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,return)</onclick>
			<property name="path">ActivateWindow(Videos,return)</property>
			<property name="list">Videos</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">videos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="widget">systeminfo</property>
			<property name="widgetName">$LOCALIZE[130]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/systeminfo.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</property>
			<property name="list">library://video/recentlyaddedepisodes.xml/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$LOCALIZE[20389]</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>common/skin-settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<property name="translatedPath">ActivateWindow(SkinSettings)</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-movieshub">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-movieshub">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-num-589">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-num-589">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;limit=250</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</property>
			<property name="list">library://video/recentlyaddedepisodes.xml/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</property>
			<property name="list">library://video/recentlyaddedepisodes.xml/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$LOCALIZE[20389]</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$LOCALIZE[20389]</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-musicvideos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-musicvideos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-pictures">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-pictures">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-videos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-videos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>common/skin-settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<property name="translatedPath">ActivateWindow(SkinSettings)</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>common/skin-settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<property name="translatedPath">ActivateWindow(SkinSettings)</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<property name="thumb.name">None</property>
			<property name="thumbName">None</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
	</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="1" />
			<param name="submenuid" value="livetv" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1510" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="Timers" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1510" />
			<param name="widgetName" value="Timers" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=timers&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1520" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="Recent recordings" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1520" />
			<param name="widgetName" value="Recent recordings" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1530" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1540" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1550" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1560" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1570" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1580" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="4" />
			<param name="submenuid" value="movies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4510" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32029]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4510" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32029]" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4520" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="$LOCALIZE[20386]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4520" />
			<param name="widgetName" value="$LOCALIZE[20386]" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4530" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="In-progress movies" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4530" />
			<param name="widgetName" value="In-progress movies" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4540" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4550" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4560" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4570" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4580" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="5" />
			<param name="submenuid" value="tvshows" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="true" />
			<param name="hasWidget4" value="true" />
			<param name="hasWidget5" value="true" />
			<param name="hasWidget6" value="true" />
			<param name="hasWidget7" value="true" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5510" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32002]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5510" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32002]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5520" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="$LOCALIZE[20387]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5520" />
			<param name="widgetName" value="$LOCALIZE[20387]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5530" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="Unaired episodes" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5530" />
			<param name="widgetName" value="Unaired episodes" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=unaired&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5540" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="Next airing episodes" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5540" />
			<param name="widgetName" value="Next airing episodes" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5550" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="Episodes airing today" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5550" />
			<param name="widgetName" value="Episodes airing today" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=airingtoday&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5560" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="IMDB Top 250 Tv shows in library" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5560" />
			<param name="widgetName" value="IMDB Top 250 Tv shows in library" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=top250&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5570" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="Recommended Tv Shows" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5570" />
			<param name="widgetName" value="Recommended Tv Shows" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recommended&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5580" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="Random Tv Shows" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5580" />
			<param name="widgetName" value="Random Tv Shows" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="6" />
			<param name="submenuid" value="music" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="square" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6510" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="$LOCALIZE[359]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6510" />
			<param name="widgetName" value="$LOCALIZE[359]" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]" />
			<param name="widgetStyle" value="widget_layout_square" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6520" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32012]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6520" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32012]" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6530" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6540" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6550" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6560" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6570" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6580" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="7" />
			<param name="submenuid" value="musicvideos" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7510" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="$LOCALIZE[20390]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7510" />
			<param name="widgetName" value="$LOCALIZE[20390]" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7520" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7530" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7540" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7550" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7560" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7570" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7580" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="8" />
			<param name="submenuid" value="weather" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8510" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="$LOCALIZE[8]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="weather" />
			<param name="widgetid" value="8510" />
			<param name="widgetName" value="$LOCALIZE[8]" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[WeatherWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8520" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8530" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8540" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8550" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8560" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8570" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8580" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="13" />
			<param name="submenuid" value="settings" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13510" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="$LOCALIZE[130]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="systeminfo" />
			<param name="widgetid" value="13510" />
			<param name="widgetName" value="$LOCALIZE[130]" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[SystemInfoWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13520" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13530" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13540" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13550" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13560" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13570" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13580" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control id="1508" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="1508" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
	</include>
	<variable name="1510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=timers&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-1510">
		<value condition="StringCompare(Container(1510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1510).ListItem.label] $INFO[Container(1510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Title) + SubString(Container(1510).ListItem.FolderPath, pvr://)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Season) + !IsEmpty(Container(1510).ListItem.Episode) + !StringCompare(Container(1510).ListItem.TvShowTitle,Container(1510).ListItem.Title)">[UPPERCASE]S$INFO[Container(1510).ListItem.Season]E$INFO[Container(1510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1510">
		<value condition="!IsEmpty(Container(1510).ListItem.TvShowTitle) + !IsEmpty(Container(1510).ListItem.Genre)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.TvShowTitle)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Premiered,, • ]$INFO[Container(1510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Year)">$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Duration,,min. • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Artist) + !IsEmpty(Container(1510).ListItem.Album)">$INFO[Container(1510).ListItem.Artist,, • ]$INFO[Container(1510).ListItem.Album,, • ]$INFO[Container(1510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Property(StartTime))">$INFO[Container(1510).ListItem.Property(ChannelName),, • ]$INFO[Container(1510).ListItem.Property(StartTime),, - ]$INFO[Container(1510).ListItem.Property(EndTime),, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.StartTime)">$INFO[Container(1510).ListItem.ChannelName,, • ]$INFO[Container(1510).ListItem.StartTime,, - ]$INFO[Container(1510).ListItem.EndTime,, • ]$INFO[Container(1510).ListItem.Genre]</value>
	</variable>
	<variable name="1520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-1520">
		<value condition="StringCompare(Container(1520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1520).ListItem.label] $INFO[Container(1520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Title) + SubString(Container(1520).ListItem.FolderPath, pvr://)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Season) + !IsEmpty(Container(1520).ListItem.Episode) + !StringCompare(Container(1520).ListItem.TvShowTitle,Container(1520).ListItem.Title)">[UPPERCASE]S$INFO[Container(1520).ListItem.Season]E$INFO[Container(1520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Title)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Label)">$INFO[Container(1520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1520">
		<value condition="!IsEmpty(Container(1520).ListItem.TvShowTitle) + !IsEmpty(Container(1520).ListItem.Genre)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.TvShowTitle)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Premiered,, • ]$INFO[Container(1520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Year)">$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Duration,,min. • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Artist) + !IsEmpty(Container(1520).ListItem.Album)">$INFO[Container(1520).ListItem.Artist,, • ]$INFO[Container(1520).ListItem.Album,, • ]$INFO[Container(1520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Property(StartTime))">$INFO[Container(1520).ListItem.Property(ChannelName),, • ]$INFO[Container(1520).ListItem.Property(StartTime),, - ]$INFO[Container(1520).ListItem.Property(EndTime),, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.StartTime)">$INFO[Container(1520).ListItem.ChannelName,, • ]$INFO[Container(1520).ListItem.StartTime,, - ]$INFO[Container(1520).ListItem.EndTime,, • ]$INFO[Container(1520).ListItem.Genre]</value>
	</variable>
	<variable name="1530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1530">
		<value condition="StringCompare(Container(1530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1530).ListItem.label] $INFO[Container(1530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Title) + SubString(Container(1530).ListItem.FolderPath, pvr://)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Season) + !IsEmpty(Container(1530).ListItem.Episode) + !StringCompare(Container(1530).ListItem.TvShowTitle,Container(1530).ListItem.Title)">[UPPERCASE]S$INFO[Container(1530).ListItem.Season]E$INFO[Container(1530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Title)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Label)">$INFO[Container(1530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1530">
		<value condition="!IsEmpty(Container(1530).ListItem.TvShowTitle) + !IsEmpty(Container(1530).ListItem.Genre)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.TvShowTitle)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Premiered,, • ]$INFO[Container(1530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Year)">$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Duration,,min. • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Artist) + !IsEmpty(Container(1530).ListItem.Album)">$INFO[Container(1530).ListItem.Artist,, • ]$INFO[Container(1530).ListItem.Album,, • ]$INFO[Container(1530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Property(StartTime))">$INFO[Container(1530).ListItem.Property(ChannelName),, • ]$INFO[Container(1530).ListItem.Property(StartTime),, - ]$INFO[Container(1530).ListItem.Property(EndTime),, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.StartTime)">$INFO[Container(1530).ListItem.ChannelName,, • ]$INFO[Container(1530).ListItem.StartTime,, - ]$INFO[Container(1530).ListItem.EndTime,, • ]$INFO[Container(1530).ListItem.Genre]</value>
	</variable>
	<variable name="1540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1540">
		<value condition="StringCompare(Container(1540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1540).ListItem.label] $INFO[Container(1540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Title) + SubString(Container(1540).ListItem.FolderPath, pvr://)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Season) + !IsEmpty(Container(1540).ListItem.Episode) + !StringCompare(Container(1540).ListItem.TvShowTitle,Container(1540).ListItem.Title)">[UPPERCASE]S$INFO[Container(1540).ListItem.Season]E$INFO[Container(1540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Title)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Label)">$INFO[Container(1540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1540">
		<value condition="!IsEmpty(Container(1540).ListItem.TvShowTitle) + !IsEmpty(Container(1540).ListItem.Genre)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.TvShowTitle)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Premiered,, • ]$INFO[Container(1540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Year)">$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Duration,,min. • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Artist) + !IsEmpty(Container(1540).ListItem.Album)">$INFO[Container(1540).ListItem.Artist,, • ]$INFO[Container(1540).ListItem.Album,, • ]$INFO[Container(1540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Property(StartTime))">$INFO[Container(1540).ListItem.Property(ChannelName),, • ]$INFO[Container(1540).ListItem.Property(StartTime),, - ]$INFO[Container(1540).ListItem.Property(EndTime),, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.StartTime)">$INFO[Container(1540).ListItem.ChannelName,, • ]$INFO[Container(1540).ListItem.StartTime,, - ]$INFO[Container(1540).ListItem.EndTime,, • ]$INFO[Container(1540).ListItem.Genre]</value>
	</variable>
	<variable name="1550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1550">
		<value condition="StringCompare(Container(1550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1550).ListItem.label] $INFO[Container(1550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Title) + SubString(Container(1550).ListItem.FolderPath, pvr://)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Season) + !IsEmpty(Container(1550).ListItem.Episode) + !StringCompare(Container(1550).ListItem.TvShowTitle,Container(1550).ListItem.Title)">[UPPERCASE]S$INFO[Container(1550).ListItem.Season]E$INFO[Container(1550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Title)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Label)">$INFO[Container(1550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1550">
		<value condition="!IsEmpty(Container(1550).ListItem.TvShowTitle) + !IsEmpty(Container(1550).ListItem.Genre)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.TvShowTitle)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Premiered,, • ]$INFO[Container(1550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Year)">$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Duration,,min. • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Artist) + !IsEmpty(Container(1550).ListItem.Album)">$INFO[Container(1550).ListItem.Artist,, • ]$INFO[Container(1550).ListItem.Album,, • ]$INFO[Container(1550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Property(StartTime))">$INFO[Container(1550).ListItem.Property(ChannelName),, • ]$INFO[Container(1550).ListItem.Property(StartTime),, - ]$INFO[Container(1550).ListItem.Property(EndTime),, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.StartTime)">$INFO[Container(1550).ListItem.ChannelName,, • ]$INFO[Container(1550).ListItem.StartTime,, - ]$INFO[Container(1550).ListItem.EndTime,, • ]$INFO[Container(1550).ListItem.Genre]</value>
	</variable>
	<variable name="1560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1560">
		<value condition="StringCompare(Container(1560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1560).ListItem.label] $INFO[Container(1560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Title) + SubString(Container(1560).ListItem.FolderPath, pvr://)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Season) + !IsEmpty(Container(1560).ListItem.Episode) + !StringCompare(Container(1560).ListItem.TvShowTitle,Container(1560).ListItem.Title)">[UPPERCASE]S$INFO[Container(1560).ListItem.Season]E$INFO[Container(1560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Title)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Label)">$INFO[Container(1560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1560">
		<value condition="!IsEmpty(Container(1560).ListItem.TvShowTitle) + !IsEmpty(Container(1560).ListItem.Genre)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.TvShowTitle)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Premiered,, • ]$INFO[Container(1560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Year)">$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Duration,,min. • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Artist) + !IsEmpty(Container(1560).ListItem.Album)">$INFO[Container(1560).ListItem.Artist,, • ]$INFO[Container(1560).ListItem.Album,, • ]$INFO[Container(1560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Property(StartTime))">$INFO[Container(1560).ListItem.Property(ChannelName),, • ]$INFO[Container(1560).ListItem.Property(StartTime),, - ]$INFO[Container(1560).ListItem.Property(EndTime),, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.StartTime)">$INFO[Container(1560).ListItem.ChannelName,, • ]$INFO[Container(1560).ListItem.StartTime,, - ]$INFO[Container(1560).ListItem.EndTime,, • ]$INFO[Container(1560).ListItem.Genre]</value>
	</variable>
	<variable name="1570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1570">
		<value condition="StringCompare(Container(1570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1570).ListItem.label] $INFO[Container(1570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Title) + SubString(Container(1570).ListItem.FolderPath, pvr://)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Season) + !IsEmpty(Container(1570).ListItem.Episode) + !StringCompare(Container(1570).ListItem.TvShowTitle,Container(1570).ListItem.Title)">[UPPERCASE]S$INFO[Container(1570).ListItem.Season]E$INFO[Container(1570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Title)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Label)">$INFO[Container(1570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1570">
		<value condition="!IsEmpty(Container(1570).ListItem.TvShowTitle) + !IsEmpty(Container(1570).ListItem.Genre)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.TvShowTitle)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Premiered,, • ]$INFO[Container(1570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Year)">$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Duration,,min. • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Artist) + !IsEmpty(Container(1570).ListItem.Album)">$INFO[Container(1570).ListItem.Artist,, • ]$INFO[Container(1570).ListItem.Album,, • ]$INFO[Container(1570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Property(StartTime))">$INFO[Container(1570).ListItem.Property(ChannelName),, • ]$INFO[Container(1570).ListItem.Property(StartTime),, - ]$INFO[Container(1570).ListItem.Property(EndTime),, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.StartTime)">$INFO[Container(1570).ListItem.ChannelName,, • ]$INFO[Container(1570).ListItem.StartTime,, - ]$INFO[Container(1570).ListItem.EndTime,, • ]$INFO[Container(1570).ListItem.Genre]</value>
	</variable>
	<variable name="1580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1580">
		<value condition="StringCompare(Container(1580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1580).ListItem.label] $INFO[Container(1580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Title) + SubString(Container(1580).ListItem.FolderPath, pvr://)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Season) + !IsEmpty(Container(1580).ListItem.Episode) + !StringCompare(Container(1580).ListItem.TvShowTitle,Container(1580).ListItem.Title)">[UPPERCASE]S$INFO[Container(1580).ListItem.Season]E$INFO[Container(1580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Title)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Label)">$INFO[Container(1580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1580">
		<value condition="!IsEmpty(Container(1580).ListItem.TvShowTitle) + !IsEmpty(Container(1580).ListItem.Genre)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.TvShowTitle)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Premiered,, • ]$INFO[Container(1580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Year)">$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Duration,,min. • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Artist) + !IsEmpty(Container(1580).ListItem.Album)">$INFO[Container(1580).ListItem.Artist,, • ]$INFO[Container(1580).ListItem.Album,, • ]$INFO[Container(1580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Property(StartTime))">$INFO[Container(1580).ListItem.Property(ChannelName),, • ]$INFO[Container(1580).ListItem.Property(StartTime),, - ]$INFO[Container(1580).ListItem.Property(EndTime),, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.StartTime)">$INFO[Container(1580).ListItem.ChannelName,, • ]$INFO[Container(1580).ListItem.StartTime,, - ]$INFO[Container(1580).ListItem.EndTime,, • ]$INFO[Container(1580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-1">
		<value condition="Skin.String(widgetvalue-livetv,7)" />
		<value condition="Skin.String(widgetvalue-livetv,6)" />
		<value condition="Skin.String(widgetvalue-livetv,5)" />
		<value condition="Skin.String(widgetvalue-livetv,4)" />
		<value condition="Skin.String(widgetvalue-livetv,3)" />
		<value condition="Skin.String(widgetvalue-livetv,2)" />
		<value condition="Skin.String(widgetvalue-livetv,1)">Recent recordings</value>
		<value>Timers</value>
	</variable>
	<variable name="4510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-4510">
		<value condition="StringCompare(Container(4510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4510).ListItem.label] $INFO[Container(4510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Title) + SubString(Container(4510).ListItem.FolderPath, pvr://)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Season) + !IsEmpty(Container(4510).ListItem.Episode) + !StringCompare(Container(4510).ListItem.TvShowTitle,Container(4510).ListItem.Title)">[UPPERCASE]S$INFO[Container(4510).ListItem.Season]E$INFO[Container(4510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Title)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Label)">$INFO[Container(4510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4510">
		<value condition="!IsEmpty(Container(4510).ListItem.TvShowTitle) + !IsEmpty(Container(4510).ListItem.Genre)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.TvShowTitle)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Premiered,, • ]$INFO[Container(4510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Year)">$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Duration,,min. • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Artist) + !IsEmpty(Container(4510).ListItem.Album)">$INFO[Container(4510).ListItem.Artist,, • ]$INFO[Container(4510).ListItem.Album,, • ]$INFO[Container(4510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Property(StartTime))">$INFO[Container(4510).ListItem.Property(ChannelName),, • ]$INFO[Container(4510).ListItem.Property(StartTime),, - ]$INFO[Container(4510).ListItem.Property(EndTime),, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.StartTime)">$INFO[Container(4510).ListItem.ChannelName,, • ]$INFO[Container(4510).ListItem.StartTime,, - ]$INFO[Container(4510).ListItem.EndTime,, • ]$INFO[Container(4510).ListItem.Genre]</value>
	</variable>
	<variable name="4520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-4520">
		<value condition="StringCompare(Container(4520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4520).ListItem.label] $INFO[Container(4520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Title) + SubString(Container(4520).ListItem.FolderPath, pvr://)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Season) + !IsEmpty(Container(4520).ListItem.Episode) + !StringCompare(Container(4520).ListItem.TvShowTitle,Container(4520).ListItem.Title)">[UPPERCASE]S$INFO[Container(4520).ListItem.Season]E$INFO[Container(4520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Title)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Label)">$INFO[Container(4520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4520">
		<value condition="!IsEmpty(Container(4520).ListItem.TvShowTitle) + !IsEmpty(Container(4520).ListItem.Genre)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.TvShowTitle)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Premiered,, • ]$INFO[Container(4520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Year)">$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Duration,,min. • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Artist) + !IsEmpty(Container(4520).ListItem.Album)">$INFO[Container(4520).ListItem.Artist,, • ]$INFO[Container(4520).ListItem.Album,, • ]$INFO[Container(4520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Property(StartTime))">$INFO[Container(4520).ListItem.Property(ChannelName),, • ]$INFO[Container(4520).ListItem.Property(StartTime),, - ]$INFO[Container(4520).ListItem.Property(EndTime),, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.StartTime)">$INFO[Container(4520).ListItem.ChannelName,, • ]$INFO[Container(4520).ListItem.StartTime,, - ]$INFO[Container(4520).ListItem.EndTime,, • ]$INFO[Container(4520).ListItem.Genre]</value>
	</variable>
	<variable name="4530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-4530">
		<value condition="StringCompare(Container(4530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4530).ListItem.label] $INFO[Container(4530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Title) + SubString(Container(4530).ListItem.FolderPath, pvr://)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Season) + !IsEmpty(Container(4530).ListItem.Episode) + !StringCompare(Container(4530).ListItem.TvShowTitle,Container(4530).ListItem.Title)">[UPPERCASE]S$INFO[Container(4530).ListItem.Season]E$INFO[Container(4530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Title)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Label)">$INFO[Container(4530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4530">
		<value condition="!IsEmpty(Container(4530).ListItem.TvShowTitle) + !IsEmpty(Container(4530).ListItem.Genre)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.TvShowTitle)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Premiered,, • ]$INFO[Container(4530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Year)">$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Duration,,min. • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Artist) + !IsEmpty(Container(4530).ListItem.Album)">$INFO[Container(4530).ListItem.Artist,, • ]$INFO[Container(4530).ListItem.Album,, • ]$INFO[Container(4530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Property(StartTime))">$INFO[Container(4530).ListItem.Property(ChannelName),, • ]$INFO[Container(4530).ListItem.Property(StartTime),, - ]$INFO[Container(4530).ListItem.Property(EndTime),, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.StartTime)">$INFO[Container(4530).ListItem.ChannelName,, • ]$INFO[Container(4530).ListItem.StartTime,, - ]$INFO[Container(4530).ListItem.EndTime,, • ]$INFO[Container(4530).ListItem.Genre]</value>
	</variable>
	<variable name="4540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4540">
		<value condition="StringCompare(Container(4540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4540).ListItem.label] $INFO[Container(4540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Title) + SubString(Container(4540).ListItem.FolderPath, pvr://)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Season) + !IsEmpty(Container(4540).ListItem.Episode) + !StringCompare(Container(4540).ListItem.TvShowTitle,Container(4540).ListItem.Title)">[UPPERCASE]S$INFO[Container(4540).ListItem.Season]E$INFO[Container(4540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Title)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Label)">$INFO[Container(4540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4540">
		<value condition="!IsEmpty(Container(4540).ListItem.TvShowTitle) + !IsEmpty(Container(4540).ListItem.Genre)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.TvShowTitle)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Premiered,, • ]$INFO[Container(4540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Year)">$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Duration,,min. • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Artist) + !IsEmpty(Container(4540).ListItem.Album)">$INFO[Container(4540).ListItem.Artist,, • ]$INFO[Container(4540).ListItem.Album,, • ]$INFO[Container(4540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Property(StartTime))">$INFO[Container(4540).ListItem.Property(ChannelName),, • ]$INFO[Container(4540).ListItem.Property(StartTime),, - ]$INFO[Container(4540).ListItem.Property(EndTime),, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.StartTime)">$INFO[Container(4540).ListItem.ChannelName,, • ]$INFO[Container(4540).ListItem.StartTime,, - ]$INFO[Container(4540).ListItem.EndTime,, • ]$INFO[Container(4540).ListItem.Genre]</value>
	</variable>
	<variable name="4550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4550">
		<value condition="StringCompare(Container(4550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4550).ListItem.label] $INFO[Container(4550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Title) + SubString(Container(4550).ListItem.FolderPath, pvr://)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Season) + !IsEmpty(Container(4550).ListItem.Episode) + !StringCompare(Container(4550).ListItem.TvShowTitle,Container(4550).ListItem.Title)">[UPPERCASE]S$INFO[Container(4550).ListItem.Season]E$INFO[Container(4550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Title)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Label)">$INFO[Container(4550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4550">
		<value condition="!IsEmpty(Container(4550).ListItem.TvShowTitle) + !IsEmpty(Container(4550).ListItem.Genre)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.TvShowTitle)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Premiered,, • ]$INFO[Container(4550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Year)">$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Duration,,min. • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Artist) + !IsEmpty(Container(4550).ListItem.Album)">$INFO[Container(4550).ListItem.Artist,, • ]$INFO[Container(4550).ListItem.Album,, • ]$INFO[Container(4550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Property(StartTime))">$INFO[Container(4550).ListItem.Property(ChannelName),, • ]$INFO[Container(4550).ListItem.Property(StartTime),, - ]$INFO[Container(4550).ListItem.Property(EndTime),, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.StartTime)">$INFO[Container(4550).ListItem.ChannelName,, • ]$INFO[Container(4550).ListItem.StartTime,, - ]$INFO[Container(4550).ListItem.EndTime,, • ]$INFO[Container(4550).ListItem.Genre]</value>
	</variable>
	<variable name="4560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4560">
		<value condition="StringCompare(Container(4560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4560).ListItem.label] $INFO[Container(4560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Title) + SubString(Container(4560).ListItem.FolderPath, pvr://)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Season) + !IsEmpty(Container(4560).ListItem.Episode) + !StringCompare(Container(4560).ListItem.TvShowTitle,Container(4560).ListItem.Title)">[UPPERCASE]S$INFO[Container(4560).ListItem.Season]E$INFO[Container(4560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Title)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Label)">$INFO[Container(4560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4560">
		<value condition="!IsEmpty(Container(4560).ListItem.TvShowTitle) + !IsEmpty(Container(4560).ListItem.Genre)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.TvShowTitle)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Premiered,, • ]$INFO[Container(4560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Year)">$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Duration,,min. • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Artist) + !IsEmpty(Container(4560).ListItem.Album)">$INFO[Container(4560).ListItem.Artist,, • ]$INFO[Container(4560).ListItem.Album,, • ]$INFO[Container(4560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Property(StartTime))">$INFO[Container(4560).ListItem.Property(ChannelName),, • ]$INFO[Container(4560).ListItem.Property(StartTime),, - ]$INFO[Container(4560).ListItem.Property(EndTime),, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.StartTime)">$INFO[Container(4560).ListItem.ChannelName,, • ]$INFO[Container(4560).ListItem.StartTime,, - ]$INFO[Container(4560).ListItem.EndTime,, • ]$INFO[Container(4560).ListItem.Genre]</value>
	</variable>
	<variable name="4570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4570">
		<value condition="StringCompare(Container(4570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4570).ListItem.label] $INFO[Container(4570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Title) + SubString(Container(4570).ListItem.FolderPath, pvr://)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Season) + !IsEmpty(Container(4570).ListItem.Episode) + !StringCompare(Container(4570).ListItem.TvShowTitle,Container(4570).ListItem.Title)">[UPPERCASE]S$INFO[Container(4570).ListItem.Season]E$INFO[Container(4570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Title)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Label)">$INFO[Container(4570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4570">
		<value condition="!IsEmpty(Container(4570).ListItem.TvShowTitle) + !IsEmpty(Container(4570).ListItem.Genre)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.TvShowTitle)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Premiered,, • ]$INFO[Container(4570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Year)">$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Duration,,min. • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Artist) + !IsEmpty(Container(4570).ListItem.Album)">$INFO[Container(4570).ListItem.Artist,, • ]$INFO[Container(4570).ListItem.Album,, • ]$INFO[Container(4570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Property(StartTime))">$INFO[Container(4570).ListItem.Property(ChannelName),, • ]$INFO[Container(4570).ListItem.Property(StartTime),, - ]$INFO[Container(4570).ListItem.Property(EndTime),, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.StartTime)">$INFO[Container(4570).ListItem.ChannelName,, • ]$INFO[Container(4570).ListItem.StartTime,, - ]$INFO[Container(4570).ListItem.EndTime,, • ]$INFO[Container(4570).ListItem.Genre]</value>
	</variable>
	<variable name="4580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4580">
		<value condition="StringCompare(Container(4580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4580).ListItem.label] $INFO[Container(4580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Title) + SubString(Container(4580).ListItem.FolderPath, pvr://)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Season) + !IsEmpty(Container(4580).ListItem.Episode) + !StringCompare(Container(4580).ListItem.TvShowTitle,Container(4580).ListItem.Title)">[UPPERCASE]S$INFO[Container(4580).ListItem.Season]E$INFO[Container(4580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Title)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Label)">$INFO[Container(4580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4580">
		<value condition="!IsEmpty(Container(4580).ListItem.TvShowTitle) + !IsEmpty(Container(4580).ListItem.Genre)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.TvShowTitle)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Premiered,, • ]$INFO[Container(4580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Year)">$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Duration,,min. • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Artist) + !IsEmpty(Container(4580).ListItem.Album)">$INFO[Container(4580).ListItem.Artist,, • ]$INFO[Container(4580).ListItem.Album,, • ]$INFO[Container(4580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Property(StartTime))">$INFO[Container(4580).ListItem.Property(ChannelName),, • ]$INFO[Container(4580).ListItem.Property(StartTime),, - ]$INFO[Container(4580).ListItem.Property(EndTime),, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.StartTime)">$INFO[Container(4580).ListItem.ChannelName,, • ]$INFO[Container(4580).ListItem.StartTime,, - ]$INFO[Container(4580).ListItem.EndTime,, • ]$INFO[Container(4580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-4">
		<value condition="Skin.String(widgetvalue-movies,7)" />
		<value condition="Skin.String(widgetvalue-movies,6)" />
		<value condition="Skin.String(widgetvalue-movies,5)" />
		<value condition="Skin.String(widgetvalue-movies,4)" />
		<value condition="Skin.String(widgetvalue-movies,3)" />
		<value condition="Skin.String(widgetvalue-movies,2)">In-progress movies</value>
		<value condition="Skin.String(widgetvalue-movies,1)">$LOCALIZE[20386]</value>
		<value>$ADDON[script.skin.helper.widgets 32029]</value>
	</variable>
	<variable name="5510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-5510">
		<value condition="StringCompare(Container(5510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5510).ListItem.label] $INFO[Container(5510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Title) + SubString(Container(5510).ListItem.FolderPath, pvr://)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Season) + !IsEmpty(Container(5510).ListItem.Episode) + !StringCompare(Container(5510).ListItem.TvShowTitle,Container(5510).ListItem.Title)">[UPPERCASE]S$INFO[Container(5510).ListItem.Season]E$INFO[Container(5510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Title)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Label)">$INFO[Container(5510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5510">
		<value condition="!IsEmpty(Container(5510).ListItem.TvShowTitle) + !IsEmpty(Container(5510).ListItem.Genre)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.TvShowTitle)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Premiered,, • ]$INFO[Container(5510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Year)">$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Duration,,min. • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Artist) + !IsEmpty(Container(5510).ListItem.Album)">$INFO[Container(5510).ListItem.Artist,, • ]$INFO[Container(5510).ListItem.Album,, • ]$INFO[Container(5510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Property(StartTime))">$INFO[Container(5510).ListItem.Property(ChannelName),, • ]$INFO[Container(5510).ListItem.Property(StartTime),, - ]$INFO[Container(5510).ListItem.Property(EndTime),, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.StartTime)">$INFO[Container(5510).ListItem.ChannelName,, • ]$INFO[Container(5510).ListItem.StartTime,, - ]$INFO[Container(5510).ListItem.EndTime,, • ]$INFO[Container(5510).ListItem.Genre]</value>
	</variable>
	<variable name="5520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-5520">
		<value condition="StringCompare(Container(5520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5520).ListItem.label] $INFO[Container(5520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Title) + SubString(Container(5520).ListItem.FolderPath, pvr://)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Season) + !IsEmpty(Container(5520).ListItem.Episode) + !StringCompare(Container(5520).ListItem.TvShowTitle,Container(5520).ListItem.Title)">[UPPERCASE]S$INFO[Container(5520).ListItem.Season]E$INFO[Container(5520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Title)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Label)">$INFO[Container(5520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5520">
		<value condition="!IsEmpty(Container(5520).ListItem.TvShowTitle) + !IsEmpty(Container(5520).ListItem.Genre)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.TvShowTitle)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Premiered,, • ]$INFO[Container(5520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Year)">$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Duration,,min. • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Artist) + !IsEmpty(Container(5520).ListItem.Album)">$INFO[Container(5520).ListItem.Artist,, • ]$INFO[Container(5520).ListItem.Album,, • ]$INFO[Container(5520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Property(StartTime))">$INFO[Container(5520).ListItem.Property(ChannelName),, • ]$INFO[Container(5520).ListItem.Property(StartTime),, - ]$INFO[Container(5520).ListItem.Property(EndTime),, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.StartTime)">$INFO[Container(5520).ListItem.ChannelName,, • ]$INFO[Container(5520).ListItem.StartTime,, - ]$INFO[Container(5520).ListItem.EndTime,, • ]$INFO[Container(5520).ListItem.Genre]</value>
	</variable>
	<variable name="5530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=unaired&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-5530">
		<value condition="StringCompare(Container(5530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5530).ListItem.label] $INFO[Container(5530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Title) + SubString(Container(5530).ListItem.FolderPath, pvr://)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Season) + !IsEmpty(Container(5530).ListItem.Episode) + !StringCompare(Container(5530).ListItem.TvShowTitle,Container(5530).ListItem.Title)">[UPPERCASE]S$INFO[Container(5530).ListItem.Season]E$INFO[Container(5530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Title)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Label)">$INFO[Container(5530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5530">
		<value condition="!IsEmpty(Container(5530).ListItem.TvShowTitle) + !IsEmpty(Container(5530).ListItem.Genre)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.TvShowTitle)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Premiered,, • ]$INFO[Container(5530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Year)">$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Duration,,min. • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Artist) + !IsEmpty(Container(5530).ListItem.Album)">$INFO[Container(5530).ListItem.Artist,, • ]$INFO[Container(5530).ListItem.Album,, • ]$INFO[Container(5530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Property(StartTime))">$INFO[Container(5530).ListItem.Property(ChannelName),, • ]$INFO[Container(5530).ListItem.Property(StartTime),, - ]$INFO[Container(5530).ListItem.Property(EndTime),, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.StartTime)">$INFO[Container(5530).ListItem.ChannelName,, • ]$INFO[Container(5530).ListItem.StartTime,, - ]$INFO[Container(5530).ListItem.EndTime,, • ]$INFO[Container(5530).ListItem.Genre]</value>
	</variable>
	<variable name="5540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-5540">
		<value condition="StringCompare(Container(5540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5540).ListItem.label] $INFO[Container(5540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Title) + SubString(Container(5540).ListItem.FolderPath, pvr://)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Season) + !IsEmpty(Container(5540).ListItem.Episode) + !StringCompare(Container(5540).ListItem.TvShowTitle,Container(5540).ListItem.Title)">[UPPERCASE]S$INFO[Container(5540).ListItem.Season]E$INFO[Container(5540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Title)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Label)">$INFO[Container(5540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5540">
		<value condition="!IsEmpty(Container(5540).ListItem.TvShowTitle) + !IsEmpty(Container(5540).ListItem.Genre)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.TvShowTitle)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Premiered,, • ]$INFO[Container(5540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Year)">$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Duration,,min. • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Artist) + !IsEmpty(Container(5540).ListItem.Album)">$INFO[Container(5540).ListItem.Artist,, • ]$INFO[Container(5540).ListItem.Album,, • ]$INFO[Container(5540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Property(StartTime))">$INFO[Container(5540).ListItem.Property(ChannelName),, • ]$INFO[Container(5540).ListItem.Property(StartTime),, - ]$INFO[Container(5540).ListItem.Property(EndTime),, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.StartTime)">$INFO[Container(5540).ListItem.ChannelName,, • ]$INFO[Container(5540).ListItem.StartTime,, - ]$INFO[Container(5540).ListItem.EndTime,, • ]$INFO[Container(5540).ListItem.Genre]</value>
	</variable>
	<variable name="5550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=airingtoday&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-5550">
		<value condition="StringCompare(Container(5550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5550).ListItem.label] $INFO[Container(5550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Title) + SubString(Container(5550).ListItem.FolderPath, pvr://)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Season) + !IsEmpty(Container(5550).ListItem.Episode) + !StringCompare(Container(5550).ListItem.TvShowTitle,Container(5550).ListItem.Title)">[UPPERCASE]S$INFO[Container(5550).ListItem.Season]E$INFO[Container(5550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Title)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Label)">$INFO[Container(5550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5550">
		<value condition="!IsEmpty(Container(5550).ListItem.TvShowTitle) + !IsEmpty(Container(5550).ListItem.Genre)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.TvShowTitle)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Premiered,, • ]$INFO[Container(5550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Year)">$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Duration,,min. • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Artist) + !IsEmpty(Container(5550).ListItem.Album)">$INFO[Container(5550).ListItem.Artist,, • ]$INFO[Container(5550).ListItem.Album,, • ]$INFO[Container(5550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Property(StartTime))">$INFO[Container(5550).ListItem.Property(ChannelName),, • ]$INFO[Container(5550).ListItem.Property(StartTime),, - ]$INFO[Container(5550).ListItem.Property(EndTime),, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.StartTime)">$INFO[Container(5550).ListItem.ChannelName,, • ]$INFO[Container(5550).ListItem.StartTime,, - ]$INFO[Container(5550).ListItem.EndTime,, • ]$INFO[Container(5550).ListItem.Genre]</value>
	</variable>
	<variable name="5560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=top250&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-5560">
		<value condition="StringCompare(Container(5560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5560).ListItem.label] $INFO[Container(5560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Title) + SubString(Container(5560).ListItem.FolderPath, pvr://)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Season) + !IsEmpty(Container(5560).ListItem.Episode) + !StringCompare(Container(5560).ListItem.TvShowTitle,Container(5560).ListItem.Title)">[UPPERCASE]S$INFO[Container(5560).ListItem.Season]E$INFO[Container(5560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Title)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Label)">$INFO[Container(5560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5560">
		<value condition="!IsEmpty(Container(5560).ListItem.TvShowTitle) + !IsEmpty(Container(5560).ListItem.Genre)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.TvShowTitle)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Premiered,, • ]$INFO[Container(5560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Year)">$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Duration,,min. • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Artist) + !IsEmpty(Container(5560).ListItem.Album)">$INFO[Container(5560).ListItem.Artist,, • ]$INFO[Container(5560).ListItem.Album,, • ]$INFO[Container(5560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Property(StartTime))">$INFO[Container(5560).ListItem.Property(ChannelName),, • ]$INFO[Container(5560).ListItem.Property(StartTime),, - ]$INFO[Container(5560).ListItem.Property(EndTime),, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.StartTime)">$INFO[Container(5560).ListItem.ChannelName,, • ]$INFO[Container(5560).ListItem.StartTime,, - ]$INFO[Container(5560).ListItem.EndTime,, • ]$INFO[Container(5560).ListItem.Genre]</value>
	</variable>
	<variable name="5570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recommended&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-5570">
		<value condition="StringCompare(Container(5570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5570).ListItem.label] $INFO[Container(5570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Title) + SubString(Container(5570).ListItem.FolderPath, pvr://)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Season) + !IsEmpty(Container(5570).ListItem.Episode) + !StringCompare(Container(5570).ListItem.TvShowTitle,Container(5570).ListItem.Title)">[UPPERCASE]S$INFO[Container(5570).ListItem.Season]E$INFO[Container(5570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Title)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Label)">$INFO[Container(5570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5570">
		<value condition="!IsEmpty(Container(5570).ListItem.TvShowTitle) + !IsEmpty(Container(5570).ListItem.Genre)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.TvShowTitle)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Premiered,, • ]$INFO[Container(5570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Year)">$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Duration,,min. • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Artist) + !IsEmpty(Container(5570).ListItem.Album)">$INFO[Container(5570).ListItem.Artist,, • ]$INFO[Container(5570).ListItem.Album,, • ]$INFO[Container(5570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Property(StartTime))">$INFO[Container(5570).ListItem.Property(ChannelName),, • ]$INFO[Container(5570).ListItem.Property(StartTime),, - ]$INFO[Container(5570).ListItem.Property(EndTime),, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.StartTime)">$INFO[Container(5570).ListItem.ChannelName,, • ]$INFO[Container(5570).ListItem.StartTime,, - ]$INFO[Container(5570).ListItem.EndTime,, • ]$INFO[Container(5570).ListItem.Genre]</value>
	</variable>
	<variable name="5580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-5580">
		<value condition="StringCompare(Container(5580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5580).ListItem.label] $INFO[Container(5580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Title) + SubString(Container(5580).ListItem.FolderPath, pvr://)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Season) + !IsEmpty(Container(5580).ListItem.Episode) + !StringCompare(Container(5580).ListItem.TvShowTitle,Container(5580).ListItem.Title)">[UPPERCASE]S$INFO[Container(5580).ListItem.Season]E$INFO[Container(5580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Title)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Label)">$INFO[Container(5580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5580">
		<value condition="!IsEmpty(Container(5580).ListItem.TvShowTitle) + !IsEmpty(Container(5580).ListItem.Genre)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.TvShowTitle)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Premiered,, • ]$INFO[Container(5580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Year)">$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Duration,,min. • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Artist) + !IsEmpty(Container(5580).ListItem.Album)">$INFO[Container(5580).ListItem.Artist,, • ]$INFO[Container(5580).ListItem.Album,, • ]$INFO[Container(5580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Property(StartTime))">$INFO[Container(5580).ListItem.Property(ChannelName),, • ]$INFO[Container(5580).ListItem.Property(StartTime),, - ]$INFO[Container(5580).ListItem.Property(EndTime),, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.StartTime)">$INFO[Container(5580).ListItem.ChannelName,, • ]$INFO[Container(5580).ListItem.StartTime,, - ]$INFO[Container(5580).ListItem.EndTime,, • ]$INFO[Container(5580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-5">
		<value condition="Skin.String(widgetvalue-tvshows,7)">Random Tv Shows</value>
		<value condition="Skin.String(widgetvalue-tvshows,6)">Recommended Tv Shows</value>
		<value condition="Skin.String(widgetvalue-tvshows,5)">IMDB Top 250 Tv shows in library</value>
		<value condition="Skin.String(widgetvalue-tvshows,4)">Episodes airing today</value>
		<value condition="Skin.String(widgetvalue-tvshows,3)">Next airing episodes</value>
		<value condition="Skin.String(widgetvalue-tvshows,2)">Unaired episodes</value>
		<value condition="Skin.String(widgetvalue-tvshows,1)">$LOCALIZE[20387]</value>
		<value>$ADDON[script.skin.helper.widgets 32002]</value>
	</variable>
	<variable name="6510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</value>
	</variable>
	<variable name="widgetinfolabel-6510">
		<value condition="StringCompare(Container(6510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6510).ListItem.label] $INFO[Container(6510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Title) + SubString(Container(6510).ListItem.FolderPath, pvr://)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Season) + !IsEmpty(Container(6510).ListItem.Episode) + !StringCompare(Container(6510).ListItem.TvShowTitle,Container(6510).ListItem.Title)">[UPPERCASE]S$INFO[Container(6510).ListItem.Season]E$INFO[Container(6510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Title)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Label)">$INFO[Container(6510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6510">
		<value condition="!IsEmpty(Container(6510).ListItem.TvShowTitle) + !IsEmpty(Container(6510).ListItem.Genre)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.TvShowTitle)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Premiered,, • ]$INFO[Container(6510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Year)">$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Duration,,min. • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Artist) + !IsEmpty(Container(6510).ListItem.Album)">$INFO[Container(6510).ListItem.Artist,, • ]$INFO[Container(6510).ListItem.Album,, • ]$INFO[Container(6510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.Property(StartTime))">$INFO[Container(6510).ListItem.Property(ChannelName),, • ]$INFO[Container(6510).ListItem.Property(StartTime),, - ]$INFO[Container(6510).ListItem.Property(EndTime),, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6510).ListItem.StartTime)">$INFO[Container(6510).ListItem.ChannelName,, • ]$INFO[Container(6510).ListItem.StartTime,, - ]$INFO[Container(6510).ListItem.EndTime,, • ]$INFO[Container(6510).ListItem.Genre]</value>
	</variable>
	<variable name="6520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</value>
	</variable>
	<variable name="widgetinfolabel-6520">
		<value condition="StringCompare(Container(6520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6520).ListItem.label] $INFO[Container(6520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Title) + SubString(Container(6520).ListItem.FolderPath, pvr://)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Season) + !IsEmpty(Container(6520).ListItem.Episode) + !StringCompare(Container(6520).ListItem.TvShowTitle,Container(6520).ListItem.Title)">[UPPERCASE]S$INFO[Container(6520).ListItem.Season]E$INFO[Container(6520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Title)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Label)">$INFO[Container(6520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6520">
		<value condition="!IsEmpty(Container(6520).ListItem.TvShowTitle) + !IsEmpty(Container(6520).ListItem.Genre)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.TvShowTitle)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Premiered,, • ]$INFO[Container(6520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Year)">$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Duration,,min. • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Artist) + !IsEmpty(Container(6520).ListItem.Album)">$INFO[Container(6520).ListItem.Artist,, • ]$INFO[Container(6520).ListItem.Album,, • ]$INFO[Container(6520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.Property(StartTime))">$INFO[Container(6520).ListItem.Property(ChannelName),, • ]$INFO[Container(6520).ListItem.Property(StartTime),, - ]$INFO[Container(6520).ListItem.Property(EndTime),, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6520).ListItem.StartTime)">$INFO[Container(6520).ListItem.ChannelName,, • ]$INFO[Container(6520).ListItem.StartTime,, - ]$INFO[Container(6520).ListItem.EndTime,, • ]$INFO[Container(6520).ListItem.Genre]</value>
	</variable>
	<variable name="6530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6530">
		<value condition="StringCompare(Container(6530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6530).ListItem.label] $INFO[Container(6530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Title) + SubString(Container(6530).ListItem.FolderPath, pvr://)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Season) + !IsEmpty(Container(6530).ListItem.Episode) + !StringCompare(Container(6530).ListItem.TvShowTitle,Container(6530).ListItem.Title)">[UPPERCASE]S$INFO[Container(6530).ListItem.Season]E$INFO[Container(6530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Title)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Label)">$INFO[Container(6530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6530">
		<value condition="!IsEmpty(Container(6530).ListItem.TvShowTitle) + !IsEmpty(Container(6530).ListItem.Genre)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.TvShowTitle)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Premiered,, • ]$INFO[Container(6530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Year)">$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Duration,,min. • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Artist) + !IsEmpty(Container(6530).ListItem.Album)">$INFO[Container(6530).ListItem.Artist,, • ]$INFO[Container(6530).ListItem.Album,, • ]$INFO[Container(6530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.Property(StartTime))">$INFO[Container(6530).ListItem.Property(ChannelName),, • ]$INFO[Container(6530).ListItem.Property(StartTime),, - ]$INFO[Container(6530).ListItem.Property(EndTime),, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6530).ListItem.StartTime)">$INFO[Container(6530).ListItem.ChannelName,, • ]$INFO[Container(6530).ListItem.StartTime,, - ]$INFO[Container(6530).ListItem.EndTime,, • ]$INFO[Container(6530).ListItem.Genre]</value>
	</variable>
	<variable name="6540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6540">
		<value condition="StringCompare(Container(6540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6540).ListItem.label] $INFO[Container(6540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Title) + SubString(Container(6540).ListItem.FolderPath, pvr://)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Season) + !IsEmpty(Container(6540).ListItem.Episode) + !StringCompare(Container(6540).ListItem.TvShowTitle,Container(6540).ListItem.Title)">[UPPERCASE]S$INFO[Container(6540).ListItem.Season]E$INFO[Container(6540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Title)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Label)">$INFO[Container(6540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6540">
		<value condition="!IsEmpty(Container(6540).ListItem.TvShowTitle) + !IsEmpty(Container(6540).ListItem.Genre)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.TvShowTitle)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Premiered,, • ]$INFO[Container(6540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Year)">$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Duration,,min. • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Artist) + !IsEmpty(Container(6540).ListItem.Album)">$INFO[Container(6540).ListItem.Artist,, • ]$INFO[Container(6540).ListItem.Album,, • ]$INFO[Container(6540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.Property(StartTime))">$INFO[Container(6540).ListItem.Property(ChannelName),, • ]$INFO[Container(6540).ListItem.Property(StartTime),, - ]$INFO[Container(6540).ListItem.Property(EndTime),, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6540).ListItem.StartTime)">$INFO[Container(6540).ListItem.ChannelName,, • ]$INFO[Container(6540).ListItem.StartTime,, - ]$INFO[Container(6540).ListItem.EndTime,, • ]$INFO[Container(6540).ListItem.Genre]</value>
	</variable>
	<variable name="6550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6550">
		<value condition="StringCompare(Container(6550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6550).ListItem.label] $INFO[Container(6550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Title) + SubString(Container(6550).ListItem.FolderPath, pvr://)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Season) + !IsEmpty(Container(6550).ListItem.Episode) + !StringCompare(Container(6550).ListItem.TvShowTitle,Container(6550).ListItem.Title)">[UPPERCASE]S$INFO[Container(6550).ListItem.Season]E$INFO[Container(6550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Title)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Label)">$INFO[Container(6550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6550">
		<value condition="!IsEmpty(Container(6550).ListItem.TvShowTitle) + !IsEmpty(Container(6550).ListItem.Genre)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.TvShowTitle)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Premiered,, • ]$INFO[Container(6550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Year)">$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Duration,,min. • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Artist) + !IsEmpty(Container(6550).ListItem.Album)">$INFO[Container(6550).ListItem.Artist,, • ]$INFO[Container(6550).ListItem.Album,, • ]$INFO[Container(6550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.Property(StartTime))">$INFO[Container(6550).ListItem.Property(ChannelName),, • ]$INFO[Container(6550).ListItem.Property(StartTime),, - ]$INFO[Container(6550).ListItem.Property(EndTime),, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6550).ListItem.StartTime)">$INFO[Container(6550).ListItem.ChannelName,, • ]$INFO[Container(6550).ListItem.StartTime,, - ]$INFO[Container(6550).ListItem.EndTime,, • ]$INFO[Container(6550).ListItem.Genre]</value>
	</variable>
	<variable name="6560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6560">
		<value condition="StringCompare(Container(6560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6560).ListItem.label] $INFO[Container(6560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Title) + SubString(Container(6560).ListItem.FolderPath, pvr://)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Season) + !IsEmpty(Container(6560).ListItem.Episode) + !StringCompare(Container(6560).ListItem.TvShowTitle,Container(6560).ListItem.Title)">[UPPERCASE]S$INFO[Container(6560).ListItem.Season]E$INFO[Container(6560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Title)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Label)">$INFO[Container(6560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6560">
		<value condition="!IsEmpty(Container(6560).ListItem.TvShowTitle) + !IsEmpty(Container(6560).ListItem.Genre)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.TvShowTitle)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Premiered,, • ]$INFO[Container(6560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Year)">$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Duration,,min. • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Artist) + !IsEmpty(Container(6560).ListItem.Album)">$INFO[Container(6560).ListItem.Artist,, • ]$INFO[Container(6560).ListItem.Album,, • ]$INFO[Container(6560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.Property(StartTime))">$INFO[Container(6560).ListItem.Property(ChannelName),, • ]$INFO[Container(6560).ListItem.Property(StartTime),, - ]$INFO[Container(6560).ListItem.Property(EndTime),, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6560).ListItem.StartTime)">$INFO[Container(6560).ListItem.ChannelName,, • ]$INFO[Container(6560).ListItem.StartTime,, - ]$INFO[Container(6560).ListItem.EndTime,, • ]$INFO[Container(6560).ListItem.Genre]</value>
	</variable>
	<variable name="6570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6570">
		<value condition="StringCompare(Container(6570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6570).ListItem.label] $INFO[Container(6570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Title) + SubString(Container(6570).ListItem.FolderPath, pvr://)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Season) + !IsEmpty(Container(6570).ListItem.Episode) + !StringCompare(Container(6570).ListItem.TvShowTitle,Container(6570).ListItem.Title)">[UPPERCASE]S$INFO[Container(6570).ListItem.Season]E$INFO[Container(6570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Title)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Label)">$INFO[Container(6570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6570">
		<value condition="!IsEmpty(Container(6570).ListItem.TvShowTitle) + !IsEmpty(Container(6570).ListItem.Genre)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.TvShowTitle)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Premiered,, • ]$INFO[Container(6570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Year)">$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Duration,,min. • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Artist) + !IsEmpty(Container(6570).ListItem.Album)">$INFO[Container(6570).ListItem.Artist,, • ]$INFO[Container(6570).ListItem.Album,, • ]$INFO[Container(6570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.Property(StartTime))">$INFO[Container(6570).ListItem.Property(ChannelName),, • ]$INFO[Container(6570).ListItem.Property(StartTime),, - ]$INFO[Container(6570).ListItem.Property(EndTime),, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6570).ListItem.StartTime)">$INFO[Container(6570).ListItem.ChannelName,, • ]$INFO[Container(6570).ListItem.StartTime,, - ]$INFO[Container(6570).ListItem.EndTime,, • ]$INFO[Container(6570).ListItem.Genre]</value>
	</variable>
	<variable name="6580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6580">
		<value condition="StringCompare(Container(6580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6580).ListItem.label] $INFO[Container(6580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Title) + SubString(Container(6580).ListItem.FolderPath, pvr://)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Season) + !IsEmpty(Container(6580).ListItem.Episode) + !StringCompare(Container(6580).ListItem.TvShowTitle,Container(6580).ListItem.Title)">[UPPERCASE]S$INFO[Container(6580).ListItem.Season]E$INFO[Container(6580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Title)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Label)">$INFO[Container(6580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6580">
		<value condition="!IsEmpty(Container(6580).ListItem.TvShowTitle) + !IsEmpty(Container(6580).ListItem.Genre)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.TvShowTitle)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Premiered,, • ]$INFO[Container(6580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Year)">$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Duration,,min. • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Artist) + !IsEmpty(Container(6580).ListItem.Album)">$INFO[Container(6580).ListItem.Artist,, • ]$INFO[Container(6580).ListItem.Album,, • ]$INFO[Container(6580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.Property(StartTime))">$INFO[Container(6580).ListItem.Property(ChannelName),, • ]$INFO[Container(6580).ListItem.Property(StartTime),, - ]$INFO[Container(6580).ListItem.Property(EndTime),, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(6580).ListItem.StartTime)">$INFO[Container(6580).ListItem.ChannelName,, • ]$INFO[Container(6580).ListItem.StartTime,, - ]$INFO[Container(6580).ListItem.EndTime,, • ]$INFO[Container(6580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-6">
		<value condition="Skin.String(widgetvalue-music,7)" />
		<value condition="Skin.String(widgetvalue-music,6)" />
		<value condition="Skin.String(widgetvalue-music,5)" />
		<value condition="Skin.String(widgetvalue-music,4)" />
		<value condition="Skin.String(widgetvalue-music,3)" />
		<value condition="Skin.String(widgetvalue-music,2)" />
		<value condition="Skin.String(widgetvalue-music,1)">$ADDON[script.skin.helper.widgets 32012]</value>
		<value>$LOCALIZE[359]</value>
	</variable>
	<variable name="7510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-7510">
		<value condition="StringCompare(Container(7510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7510).ListItem.label] $INFO[Container(7510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Title) + SubString(Container(7510).ListItem.FolderPath, pvr://)">$INFO[Container(7510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Season) + !IsEmpty(Container(7510).ListItem.Episode) + !StringCompare(Container(7510).ListItem.TvShowTitle,Container(7510).ListItem.Title)">[UPPERCASE]S$INFO[Container(7510).ListItem.Season]E$INFO[Container(7510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Title)">$INFO[Container(7510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Label)">$INFO[Container(7510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7510">
		<value condition="!IsEmpty(Container(7510).ListItem.TvShowTitle) + !IsEmpty(Container(7510).ListItem.Genre)">$INFO[Container(7510).ListItem.TvShowTitle,, • ]$INFO[Container(7510).ListItem.Year,, • ]$INFO[Container(7510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.TvShowTitle)">$INFO[Container(7510).ListItem.TvShowTitle,, • ]$INFO[Container(7510).ListItem.Premiered,, • ]$INFO[Container(7510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Year)">$INFO[Container(7510).ListItem.Year,, • ]$INFO[Container(7510).ListItem.Duration,,min. • ]$INFO[Container(7510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Artist) + !IsEmpty(Container(7510).ListItem.Album)">$INFO[Container(7510).ListItem.Artist,, • ]$INFO[Container(7510).ListItem.Album,, • ]$INFO[Container(7510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.Property(StartTime))">$INFO[Container(7510).ListItem.Property(ChannelName),, • ]$INFO[Container(7510).ListItem.Property(StartTime),, - ]$INFO[Container(7510).ListItem.Property(EndTime),, • ]$INFO[Container(7510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7510).ListItem.StartTime)">$INFO[Container(7510).ListItem.ChannelName,, • ]$INFO[Container(7510).ListItem.StartTime,, - ]$INFO[Container(7510).ListItem.EndTime,, • ]$INFO[Container(7510).ListItem.Genre]</value>
	</variable>
	<variable name="7520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7520">
		<value condition="StringCompare(Container(7520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7520).ListItem.label] $INFO[Container(7520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Title) + SubString(Container(7520).ListItem.FolderPath, pvr://)">$INFO[Container(7520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Season) + !IsEmpty(Container(7520).ListItem.Episode) + !StringCompare(Container(7520).ListItem.TvShowTitle,Container(7520).ListItem.Title)">[UPPERCASE]S$INFO[Container(7520).ListItem.Season]E$INFO[Container(7520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Title)">$INFO[Container(7520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Label)">$INFO[Container(7520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7520">
		<value condition="!IsEmpty(Container(7520).ListItem.TvShowTitle) + !IsEmpty(Container(7520).ListItem.Genre)">$INFO[Container(7520).ListItem.TvShowTitle,, • ]$INFO[Container(7520).ListItem.Year,, • ]$INFO[Container(7520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.TvShowTitle)">$INFO[Container(7520).ListItem.TvShowTitle,, • ]$INFO[Container(7520).ListItem.Premiered,, • ]$INFO[Container(7520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Year)">$INFO[Container(7520).ListItem.Year,, • ]$INFO[Container(7520).ListItem.Duration,,min. • ]$INFO[Container(7520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Artist) + !IsEmpty(Container(7520).ListItem.Album)">$INFO[Container(7520).ListItem.Artist,, • ]$INFO[Container(7520).ListItem.Album,, • ]$INFO[Container(7520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.Property(StartTime))">$INFO[Container(7520).ListItem.Property(ChannelName),, • ]$INFO[Container(7520).ListItem.Property(StartTime),, - ]$INFO[Container(7520).ListItem.Property(EndTime),, • ]$INFO[Container(7520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7520).ListItem.StartTime)">$INFO[Container(7520).ListItem.ChannelName,, • ]$INFO[Container(7520).ListItem.StartTime,, - ]$INFO[Container(7520).ListItem.EndTime,, • ]$INFO[Container(7520).ListItem.Genre]</value>
	</variable>
	<variable name="7530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7530">
		<value condition="StringCompare(Container(7530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7530).ListItem.label] $INFO[Container(7530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Title) + SubString(Container(7530).ListItem.FolderPath, pvr://)">$INFO[Container(7530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Season) + !IsEmpty(Container(7530).ListItem.Episode) + !StringCompare(Container(7530).ListItem.TvShowTitle,Container(7530).ListItem.Title)">[UPPERCASE]S$INFO[Container(7530).ListItem.Season]E$INFO[Container(7530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Title)">$INFO[Container(7530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Label)">$INFO[Container(7530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7530">
		<value condition="!IsEmpty(Container(7530).ListItem.TvShowTitle) + !IsEmpty(Container(7530).ListItem.Genre)">$INFO[Container(7530).ListItem.TvShowTitle,, • ]$INFO[Container(7530).ListItem.Year,, • ]$INFO[Container(7530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.TvShowTitle)">$INFO[Container(7530).ListItem.TvShowTitle,, • ]$INFO[Container(7530).ListItem.Premiered,, • ]$INFO[Container(7530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Year)">$INFO[Container(7530).ListItem.Year,, • ]$INFO[Container(7530).ListItem.Duration,,min. • ]$INFO[Container(7530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Artist) + !IsEmpty(Container(7530).ListItem.Album)">$INFO[Container(7530).ListItem.Artist,, • ]$INFO[Container(7530).ListItem.Album,, • ]$INFO[Container(7530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.Property(StartTime))">$INFO[Container(7530).ListItem.Property(ChannelName),, • ]$INFO[Container(7530).ListItem.Property(StartTime),, - ]$INFO[Container(7530).ListItem.Property(EndTime),, • ]$INFO[Container(7530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7530).ListItem.StartTime)">$INFO[Container(7530).ListItem.ChannelName,, • ]$INFO[Container(7530).ListItem.StartTime,, - ]$INFO[Container(7530).ListItem.EndTime,, • ]$INFO[Container(7530).ListItem.Genre]</value>
	</variable>
	<variable name="7540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7540">
		<value condition="StringCompare(Container(7540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7540).ListItem.label] $INFO[Container(7540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Title) + SubString(Container(7540).ListItem.FolderPath, pvr://)">$INFO[Container(7540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Season) + !IsEmpty(Container(7540).ListItem.Episode) + !StringCompare(Container(7540).ListItem.TvShowTitle,Container(7540).ListItem.Title)">[UPPERCASE]S$INFO[Container(7540).ListItem.Season]E$INFO[Container(7540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Title)">$INFO[Container(7540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Label)">$INFO[Container(7540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7540">
		<value condition="!IsEmpty(Container(7540).ListItem.TvShowTitle) + !IsEmpty(Container(7540).ListItem.Genre)">$INFO[Container(7540).ListItem.TvShowTitle,, • ]$INFO[Container(7540).ListItem.Year,, • ]$INFO[Container(7540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.TvShowTitle)">$INFO[Container(7540).ListItem.TvShowTitle,, • ]$INFO[Container(7540).ListItem.Premiered,, • ]$INFO[Container(7540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Year)">$INFO[Container(7540).ListItem.Year,, • ]$INFO[Container(7540).ListItem.Duration,,min. • ]$INFO[Container(7540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Artist) + !IsEmpty(Container(7540).ListItem.Album)">$INFO[Container(7540).ListItem.Artist,, • ]$INFO[Container(7540).ListItem.Album,, • ]$INFO[Container(7540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.Property(StartTime))">$INFO[Container(7540).ListItem.Property(ChannelName),, • ]$INFO[Container(7540).ListItem.Property(StartTime),, - ]$INFO[Container(7540).ListItem.Property(EndTime),, • ]$INFO[Container(7540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7540).ListItem.StartTime)">$INFO[Container(7540).ListItem.ChannelName,, • ]$INFO[Container(7540).ListItem.StartTime,, - ]$INFO[Container(7540).ListItem.EndTime,, • ]$INFO[Container(7540).ListItem.Genre]</value>
	</variable>
	<variable name="7550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7550">
		<value condition="StringCompare(Container(7550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7550).ListItem.label] $INFO[Container(7550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Title) + SubString(Container(7550).ListItem.FolderPath, pvr://)">$INFO[Container(7550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Season) + !IsEmpty(Container(7550).ListItem.Episode) + !StringCompare(Container(7550).ListItem.TvShowTitle,Container(7550).ListItem.Title)">[UPPERCASE]S$INFO[Container(7550).ListItem.Season]E$INFO[Container(7550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Title)">$INFO[Container(7550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Label)">$INFO[Container(7550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7550">
		<value condition="!IsEmpty(Container(7550).ListItem.TvShowTitle) + !IsEmpty(Container(7550).ListItem.Genre)">$INFO[Container(7550).ListItem.TvShowTitle,, • ]$INFO[Container(7550).ListItem.Year,, • ]$INFO[Container(7550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.TvShowTitle)">$INFO[Container(7550).ListItem.TvShowTitle,, • ]$INFO[Container(7550).ListItem.Premiered,, • ]$INFO[Container(7550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Year)">$INFO[Container(7550).ListItem.Year,, • ]$INFO[Container(7550).ListItem.Duration,,min. • ]$INFO[Container(7550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Artist) + !IsEmpty(Container(7550).ListItem.Album)">$INFO[Container(7550).ListItem.Artist,, • ]$INFO[Container(7550).ListItem.Album,, • ]$INFO[Container(7550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.Property(StartTime))">$INFO[Container(7550).ListItem.Property(ChannelName),, • ]$INFO[Container(7550).ListItem.Property(StartTime),, - ]$INFO[Container(7550).ListItem.Property(EndTime),, • ]$INFO[Container(7550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7550).ListItem.StartTime)">$INFO[Container(7550).ListItem.ChannelName,, • ]$INFO[Container(7550).ListItem.StartTime,, - ]$INFO[Container(7550).ListItem.EndTime,, • ]$INFO[Container(7550).ListItem.Genre]</value>
	</variable>
	<variable name="7560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7560">
		<value condition="StringCompare(Container(7560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7560).ListItem.label] $INFO[Container(7560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Title) + SubString(Container(7560).ListItem.FolderPath, pvr://)">$INFO[Container(7560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Season) + !IsEmpty(Container(7560).ListItem.Episode) + !StringCompare(Container(7560).ListItem.TvShowTitle,Container(7560).ListItem.Title)">[UPPERCASE]S$INFO[Container(7560).ListItem.Season]E$INFO[Container(7560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Title)">$INFO[Container(7560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Label)">$INFO[Container(7560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7560">
		<value condition="!IsEmpty(Container(7560).ListItem.TvShowTitle) + !IsEmpty(Container(7560).ListItem.Genre)">$INFO[Container(7560).ListItem.TvShowTitle,, • ]$INFO[Container(7560).ListItem.Year,, • ]$INFO[Container(7560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.TvShowTitle)">$INFO[Container(7560).ListItem.TvShowTitle,, • ]$INFO[Container(7560).ListItem.Premiered,, • ]$INFO[Container(7560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Year)">$INFO[Container(7560).ListItem.Year,, • ]$INFO[Container(7560).ListItem.Duration,,min. • ]$INFO[Container(7560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Artist) + !IsEmpty(Container(7560).ListItem.Album)">$INFO[Container(7560).ListItem.Artist,, • ]$INFO[Container(7560).ListItem.Album,, • ]$INFO[Container(7560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.Property(StartTime))">$INFO[Container(7560).ListItem.Property(ChannelName),, • ]$INFO[Container(7560).ListItem.Property(StartTime),, - ]$INFO[Container(7560).ListItem.Property(EndTime),, • ]$INFO[Container(7560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7560).ListItem.StartTime)">$INFO[Container(7560).ListItem.ChannelName,, • ]$INFO[Container(7560).ListItem.StartTime,, - ]$INFO[Container(7560).ListItem.EndTime,, • ]$INFO[Container(7560).ListItem.Genre]</value>
	</variable>
	<variable name="7570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7570">
		<value condition="StringCompare(Container(7570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7570).ListItem.label] $INFO[Container(7570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Title) + SubString(Container(7570).ListItem.FolderPath, pvr://)">$INFO[Container(7570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Season) + !IsEmpty(Container(7570).ListItem.Episode) + !StringCompare(Container(7570).ListItem.TvShowTitle,Container(7570).ListItem.Title)">[UPPERCASE]S$INFO[Container(7570).ListItem.Season]E$INFO[Container(7570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Title)">$INFO[Container(7570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Label)">$INFO[Container(7570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7570">
		<value condition="!IsEmpty(Container(7570).ListItem.TvShowTitle) + !IsEmpty(Container(7570).ListItem.Genre)">$INFO[Container(7570).ListItem.TvShowTitle,, • ]$INFO[Container(7570).ListItem.Year,, • ]$INFO[Container(7570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.TvShowTitle)">$INFO[Container(7570).ListItem.TvShowTitle,, • ]$INFO[Container(7570).ListItem.Premiered,, • ]$INFO[Container(7570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Year)">$INFO[Container(7570).ListItem.Year,, • ]$INFO[Container(7570).ListItem.Duration,,min. • ]$INFO[Container(7570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Artist) + !IsEmpty(Container(7570).ListItem.Album)">$INFO[Container(7570).ListItem.Artist,, • ]$INFO[Container(7570).ListItem.Album,, • ]$INFO[Container(7570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.Property(StartTime))">$INFO[Container(7570).ListItem.Property(ChannelName),, • ]$INFO[Container(7570).ListItem.Property(StartTime),, - ]$INFO[Container(7570).ListItem.Property(EndTime),, • ]$INFO[Container(7570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7570).ListItem.StartTime)">$INFO[Container(7570).ListItem.ChannelName,, • ]$INFO[Container(7570).ListItem.StartTime,, - ]$INFO[Container(7570).ListItem.EndTime,, • ]$INFO[Container(7570).ListItem.Genre]</value>
	</variable>
	<variable name="7580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7580">
		<value condition="StringCompare(Container(7580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7580).ListItem.label] $INFO[Container(7580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Title) + SubString(Container(7580).ListItem.FolderPath, pvr://)">$INFO[Container(7580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Season) + !IsEmpty(Container(7580).ListItem.Episode) + !StringCompare(Container(7580).ListItem.TvShowTitle,Container(7580).ListItem.Title)">[UPPERCASE]S$INFO[Container(7580).ListItem.Season]E$INFO[Container(7580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Title)">$INFO[Container(7580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Label)">$INFO[Container(7580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7580">
		<value condition="!IsEmpty(Container(7580).ListItem.TvShowTitle) + !IsEmpty(Container(7580).ListItem.Genre)">$INFO[Container(7580).ListItem.TvShowTitle,, • ]$INFO[Container(7580).ListItem.Year,, • ]$INFO[Container(7580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.TvShowTitle)">$INFO[Container(7580).ListItem.TvShowTitle,, • ]$INFO[Container(7580).ListItem.Premiered,, • ]$INFO[Container(7580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Year)">$INFO[Container(7580).ListItem.Year,, • ]$INFO[Container(7580).ListItem.Duration,,min. • ]$INFO[Container(7580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Artist) + !IsEmpty(Container(7580).ListItem.Album)">$INFO[Container(7580).ListItem.Artist,, • ]$INFO[Container(7580).ListItem.Album,, • ]$INFO[Container(7580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.Property(StartTime))">$INFO[Container(7580).ListItem.Property(ChannelName),, • ]$INFO[Container(7580).ListItem.Property(StartTime),, - ]$INFO[Container(7580).ListItem.Property(EndTime),, • ]$INFO[Container(7580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(7580).ListItem.StartTime)">$INFO[Container(7580).ListItem.ChannelName,, • ]$INFO[Container(7580).ListItem.StartTime,, - ]$INFO[Container(7580).ListItem.EndTime,, • ]$INFO[Container(7580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-7">
		<value condition="Skin.String(widgetvalue-musicvideos,7)" />
		<value condition="Skin.String(widgetvalue-musicvideos,6)" />
		<value condition="Skin.String(widgetvalue-musicvideos,5)" />
		<value condition="Skin.String(widgetvalue-musicvideos,4)" />
		<value condition="Skin.String(widgetvalue-musicvideos,3)" />
		<value condition="Skin.String(widgetvalue-musicvideos,2)" />
		<value condition="Skin.String(widgetvalue-musicvideos,1)" />
		<value>$LOCALIZE[20390]</value>
	</variable>
	<variable name="8510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8510">
		<value condition="StringCompare(Container(8510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8510).ListItem.label] $INFO[Container(8510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Title) + SubString(Container(8510).ListItem.FolderPath, pvr://)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Season) + !IsEmpty(Container(8510).ListItem.Episode) + !StringCompare(Container(8510).ListItem.TvShowTitle,Container(8510).ListItem.Title)">[UPPERCASE]S$INFO[Container(8510).ListItem.Season]E$INFO[Container(8510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Title)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Label)">$INFO[Container(8510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8510">
		<value condition="!IsEmpty(Container(8510).ListItem.TvShowTitle) + !IsEmpty(Container(8510).ListItem.Genre)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.TvShowTitle)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Premiered,, • ]$INFO[Container(8510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Year)">$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Duration,,min. • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Artist) + !IsEmpty(Container(8510).ListItem.Album)">$INFO[Container(8510).ListItem.Artist,, • ]$INFO[Container(8510).ListItem.Album,, • ]$INFO[Container(8510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Property(StartTime))">$INFO[Container(8510).ListItem.Property(ChannelName),, • ]$INFO[Container(8510).ListItem.Property(StartTime),, - ]$INFO[Container(8510).ListItem.Property(EndTime),, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.StartTime)">$INFO[Container(8510).ListItem.ChannelName,, • ]$INFO[Container(8510).ListItem.StartTime,, - ]$INFO[Container(8510).ListItem.EndTime,, • ]$INFO[Container(8510).ListItem.Genre]</value>
	</variable>
	<variable name="8520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8520">
		<value condition="StringCompare(Container(8520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8520).ListItem.label] $INFO[Container(8520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Title) + SubString(Container(8520).ListItem.FolderPath, pvr://)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Season) + !IsEmpty(Container(8520).ListItem.Episode) + !StringCompare(Container(8520).ListItem.TvShowTitle,Container(8520).ListItem.Title)">[UPPERCASE]S$INFO[Container(8520).ListItem.Season]E$INFO[Container(8520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Title)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Label)">$INFO[Container(8520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8520">
		<value condition="!IsEmpty(Container(8520).ListItem.TvShowTitle) + !IsEmpty(Container(8520).ListItem.Genre)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.TvShowTitle)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Premiered,, • ]$INFO[Container(8520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Year)">$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Duration,,min. • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Artist) + !IsEmpty(Container(8520).ListItem.Album)">$INFO[Container(8520).ListItem.Artist,, • ]$INFO[Container(8520).ListItem.Album,, • ]$INFO[Container(8520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Property(StartTime))">$INFO[Container(8520).ListItem.Property(ChannelName),, • ]$INFO[Container(8520).ListItem.Property(StartTime),, - ]$INFO[Container(8520).ListItem.Property(EndTime),, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.StartTime)">$INFO[Container(8520).ListItem.ChannelName,, • ]$INFO[Container(8520).ListItem.StartTime,, - ]$INFO[Container(8520).ListItem.EndTime,, • ]$INFO[Container(8520).ListItem.Genre]</value>
	</variable>
	<variable name="8530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8530">
		<value condition="StringCompare(Container(8530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8530).ListItem.label] $INFO[Container(8530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Title) + SubString(Container(8530).ListItem.FolderPath, pvr://)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Season) + !IsEmpty(Container(8530).ListItem.Episode) + !StringCompare(Container(8530).ListItem.TvShowTitle,Container(8530).ListItem.Title)">[UPPERCASE]S$INFO[Container(8530).ListItem.Season]E$INFO[Container(8530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Title)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Label)">$INFO[Container(8530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8530">
		<value condition="!IsEmpty(Container(8530).ListItem.TvShowTitle) + !IsEmpty(Container(8530).ListItem.Genre)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.TvShowTitle)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Premiered,, • ]$INFO[Container(8530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Year)">$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Duration,,min. • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Artist) + !IsEmpty(Container(8530).ListItem.Album)">$INFO[Container(8530).ListItem.Artist,, • ]$INFO[Container(8530).ListItem.Album,, • ]$INFO[Container(8530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Property(StartTime))">$INFO[Container(8530).ListItem.Property(ChannelName),, • ]$INFO[Container(8530).ListItem.Property(StartTime),, - ]$INFO[Container(8530).ListItem.Property(EndTime),, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.StartTime)">$INFO[Container(8530).ListItem.ChannelName,, • ]$INFO[Container(8530).ListItem.StartTime,, - ]$INFO[Container(8530).ListItem.EndTime,, • ]$INFO[Container(8530).ListItem.Genre]</value>
	</variable>
	<variable name="8540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8540">
		<value condition="StringCompare(Container(8540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8540).ListItem.label] $INFO[Container(8540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Title) + SubString(Container(8540).ListItem.FolderPath, pvr://)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Season) + !IsEmpty(Container(8540).ListItem.Episode) + !StringCompare(Container(8540).ListItem.TvShowTitle,Container(8540).ListItem.Title)">[UPPERCASE]S$INFO[Container(8540).ListItem.Season]E$INFO[Container(8540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Title)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Label)">$INFO[Container(8540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8540">
		<value condition="!IsEmpty(Container(8540).ListItem.TvShowTitle) + !IsEmpty(Container(8540).ListItem.Genre)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.TvShowTitle)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Premiered,, • ]$INFO[Container(8540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Year)">$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Duration,,min. • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Artist) + !IsEmpty(Container(8540).ListItem.Album)">$INFO[Container(8540).ListItem.Artist,, • ]$INFO[Container(8540).ListItem.Album,, • ]$INFO[Container(8540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Property(StartTime))">$INFO[Container(8540).ListItem.Property(ChannelName),, • ]$INFO[Container(8540).ListItem.Property(StartTime),, - ]$INFO[Container(8540).ListItem.Property(EndTime),, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.StartTime)">$INFO[Container(8540).ListItem.ChannelName,, • ]$INFO[Container(8540).ListItem.StartTime,, - ]$INFO[Container(8540).ListItem.EndTime,, • ]$INFO[Container(8540).ListItem.Genre]</value>
	</variable>
	<variable name="8550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8550">
		<value condition="StringCompare(Container(8550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8550).ListItem.label] $INFO[Container(8550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Title) + SubString(Container(8550).ListItem.FolderPath, pvr://)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Season) + !IsEmpty(Container(8550).ListItem.Episode) + !StringCompare(Container(8550).ListItem.TvShowTitle,Container(8550).ListItem.Title)">[UPPERCASE]S$INFO[Container(8550).ListItem.Season]E$INFO[Container(8550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Title)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Label)">$INFO[Container(8550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8550">
		<value condition="!IsEmpty(Container(8550).ListItem.TvShowTitle) + !IsEmpty(Container(8550).ListItem.Genre)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.TvShowTitle)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Premiered,, • ]$INFO[Container(8550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Year)">$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Duration,,min. • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Artist) + !IsEmpty(Container(8550).ListItem.Album)">$INFO[Container(8550).ListItem.Artist,, • ]$INFO[Container(8550).ListItem.Album,, • ]$INFO[Container(8550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Property(StartTime))">$INFO[Container(8550).ListItem.Property(ChannelName),, • ]$INFO[Container(8550).ListItem.Property(StartTime),, - ]$INFO[Container(8550).ListItem.Property(EndTime),, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.StartTime)">$INFO[Container(8550).ListItem.ChannelName,, • ]$INFO[Container(8550).ListItem.StartTime,, - ]$INFO[Container(8550).ListItem.EndTime,, • ]$INFO[Container(8550).ListItem.Genre]</value>
	</variable>
	<variable name="8560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8560">
		<value condition="StringCompare(Container(8560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8560).ListItem.label] $INFO[Container(8560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Title) + SubString(Container(8560).ListItem.FolderPath, pvr://)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Season) + !IsEmpty(Container(8560).ListItem.Episode) + !StringCompare(Container(8560).ListItem.TvShowTitle,Container(8560).ListItem.Title)">[UPPERCASE]S$INFO[Container(8560).ListItem.Season]E$INFO[Container(8560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Title)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Label)">$INFO[Container(8560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8560">
		<value condition="!IsEmpty(Container(8560).ListItem.TvShowTitle) + !IsEmpty(Container(8560).ListItem.Genre)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.TvShowTitle)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Premiered,, • ]$INFO[Container(8560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Year)">$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Duration,,min. • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Artist) + !IsEmpty(Container(8560).ListItem.Album)">$INFO[Container(8560).ListItem.Artist,, • ]$INFO[Container(8560).ListItem.Album,, • ]$INFO[Container(8560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Property(StartTime))">$INFO[Container(8560).ListItem.Property(ChannelName),, • ]$INFO[Container(8560).ListItem.Property(StartTime),, - ]$INFO[Container(8560).ListItem.Property(EndTime),, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.StartTime)">$INFO[Container(8560).ListItem.ChannelName,, • ]$INFO[Container(8560).ListItem.StartTime,, - ]$INFO[Container(8560).ListItem.EndTime,, • ]$INFO[Container(8560).ListItem.Genre]</value>
	</variable>
	<variable name="8570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8570">
		<value condition="StringCompare(Container(8570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8570).ListItem.label] $INFO[Container(8570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Title) + SubString(Container(8570).ListItem.FolderPath, pvr://)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Season) + !IsEmpty(Container(8570).ListItem.Episode) + !StringCompare(Container(8570).ListItem.TvShowTitle,Container(8570).ListItem.Title)">[UPPERCASE]S$INFO[Container(8570).ListItem.Season]E$INFO[Container(8570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Title)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Label)">$INFO[Container(8570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8570">
		<value condition="!IsEmpty(Container(8570).ListItem.TvShowTitle) + !IsEmpty(Container(8570).ListItem.Genre)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.TvShowTitle)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Premiered,, • ]$INFO[Container(8570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Year)">$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Duration,,min. • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Artist) + !IsEmpty(Container(8570).ListItem.Album)">$INFO[Container(8570).ListItem.Artist,, • ]$INFO[Container(8570).ListItem.Album,, • ]$INFO[Container(8570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Property(StartTime))">$INFO[Container(8570).ListItem.Property(ChannelName),, • ]$INFO[Container(8570).ListItem.Property(StartTime),, - ]$INFO[Container(8570).ListItem.Property(EndTime),, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.StartTime)">$INFO[Container(8570).ListItem.ChannelName,, • ]$INFO[Container(8570).ListItem.StartTime,, - ]$INFO[Container(8570).ListItem.EndTime,, • ]$INFO[Container(8570).ListItem.Genre]</value>
	</variable>
	<variable name="8580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8580">
		<value condition="StringCompare(Container(8580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8580).ListItem.label] $INFO[Container(8580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Title) + SubString(Container(8580).ListItem.FolderPath, pvr://)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Season) + !IsEmpty(Container(8580).ListItem.Episode) + !StringCompare(Container(8580).ListItem.TvShowTitle,Container(8580).ListItem.Title)">[UPPERCASE]S$INFO[Container(8580).ListItem.Season]E$INFO[Container(8580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Title)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Label)">$INFO[Container(8580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8580">
		<value condition="!IsEmpty(Container(8580).ListItem.TvShowTitle) + !IsEmpty(Container(8580).ListItem.Genre)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.TvShowTitle)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Premiered,, • ]$INFO[Container(8580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Year)">$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Duration,,min. • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Artist) + !IsEmpty(Container(8580).ListItem.Album)">$INFO[Container(8580).ListItem.Artist,, • ]$INFO[Container(8580).ListItem.Album,, • ]$INFO[Container(8580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Property(StartTime))">$INFO[Container(8580).ListItem.Property(ChannelName),, • ]$INFO[Container(8580).ListItem.Property(StartTime),, - ]$INFO[Container(8580).ListItem.Property(EndTime),, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.StartTime)">$INFO[Container(8580).ListItem.ChannelName,, • ]$INFO[Container(8580).ListItem.StartTime,, - ]$INFO[Container(8580).ListItem.EndTime,, • ]$INFO[Container(8580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-8">
		<value condition="Skin.String(widgetvalue-weather,7)" />
		<value condition="Skin.String(widgetvalue-weather,6)" />
		<value condition="Skin.String(widgetvalue-weather,5)" />
		<value condition="Skin.String(widgetvalue-weather,4)" />
		<value condition="Skin.String(widgetvalue-weather,3)" />
		<value condition="Skin.String(widgetvalue-weather,2)" />
		<value condition="Skin.String(widgetvalue-weather,1)" />
		<value>$LOCALIZE[8]</value>
	</variable>
	<variable name="13510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13510">
		<value condition="StringCompare(Container(13510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13510).ListItem.label] $INFO[Container(13510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Title) + SubString(Container(13510).ListItem.FolderPath, pvr://)">$INFO[Container(13510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Season) + !IsEmpty(Container(13510).ListItem.Episode) + !StringCompare(Container(13510).ListItem.TvShowTitle,Container(13510).ListItem.Title)">[UPPERCASE]S$INFO[Container(13510).ListItem.Season]E$INFO[Container(13510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Title)">$INFO[Container(13510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Label)">$INFO[Container(13510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13510">
		<value condition="!IsEmpty(Container(13510).ListItem.TvShowTitle) + !IsEmpty(Container(13510).ListItem.Genre)">$INFO[Container(13510).ListItem.TvShowTitle,, • ]$INFO[Container(13510).ListItem.Year,, • ]$INFO[Container(13510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.TvShowTitle)">$INFO[Container(13510).ListItem.TvShowTitle,, • ]$INFO[Container(13510).ListItem.Premiered,, • ]$INFO[Container(13510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Year)">$INFO[Container(13510).ListItem.Year,, • ]$INFO[Container(13510).ListItem.Duration,,min. • ]$INFO[Container(13510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Artist) + !IsEmpty(Container(13510).ListItem.Album)">$INFO[Container(13510).ListItem.Artist,, • ]$INFO[Container(13510).ListItem.Album,, • ]$INFO[Container(13510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.Property(StartTime))">$INFO[Container(13510).ListItem.Property(ChannelName),, • ]$INFO[Container(13510).ListItem.Property(StartTime),, - ]$INFO[Container(13510).ListItem.Property(EndTime),, • ]$INFO[Container(13510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13510).ListItem.StartTime)">$INFO[Container(13510).ListItem.ChannelName,, • ]$INFO[Container(13510).ListItem.StartTime,, - ]$INFO[Container(13510).ListItem.EndTime,, • ]$INFO[Container(13510).ListItem.Genre]</value>
	</variable>
	<variable name="13520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13520">
		<value condition="StringCompare(Container(13520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13520).ListItem.label] $INFO[Container(13520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Title) + SubString(Container(13520).ListItem.FolderPath, pvr://)">$INFO[Container(13520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Season) + !IsEmpty(Container(13520).ListItem.Episode) + !StringCompare(Container(13520).ListItem.TvShowTitle,Container(13520).ListItem.Title)">[UPPERCASE]S$INFO[Container(13520).ListItem.Season]E$INFO[Container(13520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Title)">$INFO[Container(13520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Label)">$INFO[Container(13520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13520">
		<value condition="!IsEmpty(Container(13520).ListItem.TvShowTitle) + !IsEmpty(Container(13520).ListItem.Genre)">$INFO[Container(13520).ListItem.TvShowTitle,, • ]$INFO[Container(13520).ListItem.Year,, • ]$INFO[Container(13520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.TvShowTitle)">$INFO[Container(13520).ListItem.TvShowTitle,, • ]$INFO[Container(13520).ListItem.Premiered,, • ]$INFO[Container(13520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Year)">$INFO[Container(13520).ListItem.Year,, • ]$INFO[Container(13520).ListItem.Duration,,min. • ]$INFO[Container(13520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Artist) + !IsEmpty(Container(13520).ListItem.Album)">$INFO[Container(13520).ListItem.Artist,, • ]$INFO[Container(13520).ListItem.Album,, • ]$INFO[Container(13520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.Property(StartTime))">$INFO[Container(13520).ListItem.Property(ChannelName),, • ]$INFO[Container(13520).ListItem.Property(StartTime),, - ]$INFO[Container(13520).ListItem.Property(EndTime),, • ]$INFO[Container(13520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13520).ListItem.StartTime)">$INFO[Container(13520).ListItem.ChannelName,, • ]$INFO[Container(13520).ListItem.StartTime,, - ]$INFO[Container(13520).ListItem.EndTime,, • ]$INFO[Container(13520).ListItem.Genre]</value>
	</variable>
	<variable name="13530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13530">
		<value condition="StringCompare(Container(13530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13530).ListItem.label] $INFO[Container(13530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Title) + SubString(Container(13530).ListItem.FolderPath, pvr://)">$INFO[Container(13530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Season) + !IsEmpty(Container(13530).ListItem.Episode) + !StringCompare(Container(13530).ListItem.TvShowTitle,Container(13530).ListItem.Title)">[UPPERCASE]S$INFO[Container(13530).ListItem.Season]E$INFO[Container(13530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Title)">$INFO[Container(13530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Label)">$INFO[Container(13530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13530">
		<value condition="!IsEmpty(Container(13530).ListItem.TvShowTitle) + !IsEmpty(Container(13530).ListItem.Genre)">$INFO[Container(13530).ListItem.TvShowTitle,, • ]$INFO[Container(13530).ListItem.Year,, • ]$INFO[Container(13530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.TvShowTitle)">$INFO[Container(13530).ListItem.TvShowTitle,, • ]$INFO[Container(13530).ListItem.Premiered,, • ]$INFO[Container(13530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Year)">$INFO[Container(13530).ListItem.Year,, • ]$INFO[Container(13530).ListItem.Duration,,min. • ]$INFO[Container(13530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Artist) + !IsEmpty(Container(13530).ListItem.Album)">$INFO[Container(13530).ListItem.Artist,, • ]$INFO[Container(13530).ListItem.Album,, • ]$INFO[Container(13530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.Property(StartTime))">$INFO[Container(13530).ListItem.Property(ChannelName),, • ]$INFO[Container(13530).ListItem.Property(StartTime),, - ]$INFO[Container(13530).ListItem.Property(EndTime),, • ]$INFO[Container(13530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13530).ListItem.StartTime)">$INFO[Container(13530).ListItem.ChannelName,, • ]$INFO[Container(13530).ListItem.StartTime,, - ]$INFO[Container(13530).ListItem.EndTime,, • ]$INFO[Container(13530).ListItem.Genre]</value>
	</variable>
	<variable name="13540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13540">
		<value condition="StringCompare(Container(13540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13540).ListItem.label] $INFO[Container(13540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Title) + SubString(Container(13540).ListItem.FolderPath, pvr://)">$INFO[Container(13540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Season) + !IsEmpty(Container(13540).ListItem.Episode) + !StringCompare(Container(13540).ListItem.TvShowTitle,Container(13540).ListItem.Title)">[UPPERCASE]S$INFO[Container(13540).ListItem.Season]E$INFO[Container(13540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Title)">$INFO[Container(13540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Label)">$INFO[Container(13540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13540">
		<value condition="!IsEmpty(Container(13540).ListItem.TvShowTitle) + !IsEmpty(Container(13540).ListItem.Genre)">$INFO[Container(13540).ListItem.TvShowTitle,, • ]$INFO[Container(13540).ListItem.Year,, • ]$INFO[Container(13540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.TvShowTitle)">$INFO[Container(13540).ListItem.TvShowTitle,, • ]$INFO[Container(13540).ListItem.Premiered,, • ]$INFO[Container(13540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Year)">$INFO[Container(13540).ListItem.Year,, • ]$INFO[Container(13540).ListItem.Duration,,min. • ]$INFO[Container(13540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Artist) + !IsEmpty(Container(13540).ListItem.Album)">$INFO[Container(13540).ListItem.Artist,, • ]$INFO[Container(13540).ListItem.Album,, • ]$INFO[Container(13540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.Property(StartTime))">$INFO[Container(13540).ListItem.Property(ChannelName),, • ]$INFO[Container(13540).ListItem.Property(StartTime),, - ]$INFO[Container(13540).ListItem.Property(EndTime),, • ]$INFO[Container(13540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13540).ListItem.StartTime)">$INFO[Container(13540).ListItem.ChannelName,, • ]$INFO[Container(13540).ListItem.StartTime,, - ]$INFO[Container(13540).ListItem.EndTime,, • ]$INFO[Container(13540).ListItem.Genre]</value>
	</variable>
	<variable name="13550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13550">
		<value condition="StringCompare(Container(13550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13550).ListItem.label] $INFO[Container(13550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Title) + SubString(Container(13550).ListItem.FolderPath, pvr://)">$INFO[Container(13550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Season) + !IsEmpty(Container(13550).ListItem.Episode) + !StringCompare(Container(13550).ListItem.TvShowTitle,Container(13550).ListItem.Title)">[UPPERCASE]S$INFO[Container(13550).ListItem.Season]E$INFO[Container(13550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Title)">$INFO[Container(13550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Label)">$INFO[Container(13550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13550">
		<value condition="!IsEmpty(Container(13550).ListItem.TvShowTitle) + !IsEmpty(Container(13550).ListItem.Genre)">$INFO[Container(13550).ListItem.TvShowTitle,, • ]$INFO[Container(13550).ListItem.Year,, • ]$INFO[Container(13550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.TvShowTitle)">$INFO[Container(13550).ListItem.TvShowTitle,, • ]$INFO[Container(13550).ListItem.Premiered,, • ]$INFO[Container(13550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Year)">$INFO[Container(13550).ListItem.Year,, • ]$INFO[Container(13550).ListItem.Duration,,min. • ]$INFO[Container(13550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Artist) + !IsEmpty(Container(13550).ListItem.Album)">$INFO[Container(13550).ListItem.Artist,, • ]$INFO[Container(13550).ListItem.Album,, • ]$INFO[Container(13550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.Property(StartTime))">$INFO[Container(13550).ListItem.Property(ChannelName),, • ]$INFO[Container(13550).ListItem.Property(StartTime),, - ]$INFO[Container(13550).ListItem.Property(EndTime),, • ]$INFO[Container(13550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13550).ListItem.StartTime)">$INFO[Container(13550).ListItem.ChannelName,, • ]$INFO[Container(13550).ListItem.StartTime,, - ]$INFO[Container(13550).ListItem.EndTime,, • ]$INFO[Container(13550).ListItem.Genre]</value>
	</variable>
	<variable name="13560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13560">
		<value condition="StringCompare(Container(13560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13560).ListItem.label] $INFO[Container(13560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Title) + SubString(Container(13560).ListItem.FolderPath, pvr://)">$INFO[Container(13560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Season) + !IsEmpty(Container(13560).ListItem.Episode) + !StringCompare(Container(13560).ListItem.TvShowTitle,Container(13560).ListItem.Title)">[UPPERCASE]S$INFO[Container(13560).ListItem.Season]E$INFO[Container(13560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Title)">$INFO[Container(13560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Label)">$INFO[Container(13560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13560">
		<value condition="!IsEmpty(Container(13560).ListItem.TvShowTitle) + !IsEmpty(Container(13560).ListItem.Genre)">$INFO[Container(13560).ListItem.TvShowTitle,, • ]$INFO[Container(13560).ListItem.Year,, • ]$INFO[Container(13560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.TvShowTitle)">$INFO[Container(13560).ListItem.TvShowTitle,, • ]$INFO[Container(13560).ListItem.Premiered,, • ]$INFO[Container(13560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Year)">$INFO[Container(13560).ListItem.Year,, • ]$INFO[Container(13560).ListItem.Duration,,min. • ]$INFO[Container(13560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Artist) + !IsEmpty(Container(13560).ListItem.Album)">$INFO[Container(13560).ListItem.Artist,, • ]$INFO[Container(13560).ListItem.Album,, • ]$INFO[Container(13560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.Property(StartTime))">$INFO[Container(13560).ListItem.Property(ChannelName),, • ]$INFO[Container(13560).ListItem.Property(StartTime),, - ]$INFO[Container(13560).ListItem.Property(EndTime),, • ]$INFO[Container(13560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13560).ListItem.StartTime)">$INFO[Container(13560).ListItem.ChannelName,, • ]$INFO[Container(13560).ListItem.StartTime,, - ]$INFO[Container(13560).ListItem.EndTime,, • ]$INFO[Container(13560).ListItem.Genre]</value>
	</variable>
	<variable name="13570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13570">
		<value condition="StringCompare(Container(13570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13570).ListItem.label] $INFO[Container(13570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Title) + SubString(Container(13570).ListItem.FolderPath, pvr://)">$INFO[Container(13570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Season) + !IsEmpty(Container(13570).ListItem.Episode) + !StringCompare(Container(13570).ListItem.TvShowTitle,Container(13570).ListItem.Title)">[UPPERCASE]S$INFO[Container(13570).ListItem.Season]E$INFO[Container(13570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Title)">$INFO[Container(13570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Label)">$INFO[Container(13570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13570">
		<value condition="!IsEmpty(Container(13570).ListItem.TvShowTitle) + !IsEmpty(Container(13570).ListItem.Genre)">$INFO[Container(13570).ListItem.TvShowTitle,, • ]$INFO[Container(13570).ListItem.Year,, • ]$INFO[Container(13570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.TvShowTitle)">$INFO[Container(13570).ListItem.TvShowTitle,, • ]$INFO[Container(13570).ListItem.Premiered,, • ]$INFO[Container(13570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Year)">$INFO[Container(13570).ListItem.Year,, • ]$INFO[Container(13570).ListItem.Duration,,min. • ]$INFO[Container(13570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Artist) + !IsEmpty(Container(13570).ListItem.Album)">$INFO[Container(13570).ListItem.Artist,, • ]$INFO[Container(13570).ListItem.Album,, • ]$INFO[Container(13570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.Property(StartTime))">$INFO[Container(13570).ListItem.Property(ChannelName),, • ]$INFO[Container(13570).ListItem.Property(StartTime),, - ]$INFO[Container(13570).ListItem.Property(EndTime),, • ]$INFO[Container(13570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13570).ListItem.StartTime)">$INFO[Container(13570).ListItem.ChannelName,, • ]$INFO[Container(13570).ListItem.StartTime,, - ]$INFO[Container(13570).ListItem.EndTime,, • ]$INFO[Container(13570).ListItem.Genre]</value>
	</variable>
	<variable name="13580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13580">
		<value condition="StringCompare(Container(13580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13580).ListItem.label] $INFO[Container(13580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Title) + SubString(Container(13580).ListItem.FolderPath, pvr://)">$INFO[Container(13580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Season) + !IsEmpty(Container(13580).ListItem.Episode) + !StringCompare(Container(13580).ListItem.TvShowTitle,Container(13580).ListItem.Title)">[UPPERCASE]S$INFO[Container(13580).ListItem.Season]E$INFO[Container(13580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Title)">$INFO[Container(13580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Label)">$INFO[Container(13580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13580">
		<value condition="!IsEmpty(Container(13580).ListItem.TvShowTitle) + !IsEmpty(Container(13580).ListItem.Genre)">$INFO[Container(13580).ListItem.TvShowTitle,, • ]$INFO[Container(13580).ListItem.Year,, • ]$INFO[Container(13580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.TvShowTitle)">$INFO[Container(13580).ListItem.TvShowTitle,, • ]$INFO[Container(13580).ListItem.Premiered,, • ]$INFO[Container(13580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Year)">$INFO[Container(13580).ListItem.Year,, • ]$INFO[Container(13580).ListItem.Duration,,min. • ]$INFO[Container(13580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Artist) + !IsEmpty(Container(13580).ListItem.Album)">$INFO[Container(13580).ListItem.Artist,, • ]$INFO[Container(13580).ListItem.Album,, • ]$INFO[Container(13580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.Property(StartTime))">$INFO[Container(13580).ListItem.Property(ChannelName),, • ]$INFO[Container(13580).ListItem.Property(StartTime),, - ]$INFO[Container(13580).ListItem.Property(EndTime),, • ]$INFO[Container(13580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(13580).ListItem.StartTime)">$INFO[Container(13580).ListItem.ChannelName,, • ]$INFO[Container(13580).ListItem.StartTime,, - ]$INFO[Container(13580).ListItem.EndTime,, • ]$INFO[Container(13580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-13">
		<value condition="Skin.String(widgetvalue-settings,7)" />
		<value condition="Skin.String(widgetvalue-settings,6)" />
		<value condition="Skin.String(widgetvalue-settings,5)" />
		<value condition="Skin.String(widgetvalue-settings,4)" />
		<value condition="Skin.String(widgetvalue-settings,3)" />
		<value condition="Skin.String(widgetvalue-settings,2)" />
		<value condition="Skin.String(widgetvalue-settings,1)" />
		<value>$LOCALIZE[130]</value>
	</variable>
</includes>
